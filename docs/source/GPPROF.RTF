{\rtf1\ansi\deff1
{\fonttbl{\f0\froman Times New Roman;}{\f1\fswiss Arial;}{\f2\froman Symbol;}{\f3\fmodern Courier New;}}
{\colortbl;\red0\green0\blue255;}
{\stylesheet{\fs48 \snext0 Normal;}
}\pard\plain
{\up $}{\footnote\pard\plain{\up $} Help Contents}
{\up #}{\footnote\pard\plain{\up #} HelpContentS1}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} Help Contents}
\b\fs48 Contents
\par \pard\sb235\sa115\tqr\tx9375 \fs28 Introduction\plain\f0\fs24 
\par \pard\sb15\sa55\sl275\tqr\tx9375 \uldb \f1\b\fs22 What is GpProfile?\plain\b\fs22 {\v WhatisGpProfile.>main}\plain\f0\b\fs24 
\par \pard\sb15\sa55\sl275\tqr\tx9375 \uldb \f1\fs22 Features\plain\b\fs22 {\v Features>main}\plain\f0\b\fs24 
\par \pard\sb15\sa55\sl275\tqr\tx9375 \uldb \f1\fs22 How GpProfile works?\plain\b\fs22 {\v HowGpProfileworks.>main}\plain\f0\b\fs24 
\par \pard\sb15\sa55\sl275\tqr\tx9375 \uldb \f1\fs22 Warning!\plain\b\fs22 {\v Warning.>main}\plain\f0\b\fs24 
\par \pard\sb15\sa55\sl275\tqr\tx9375 \uldb \f1\fs22 Known problems\plain\b\fs22 {\v Knownproblems>main}\plain\f0\b\fs24 
\par \pard\sb15\sa55\sl275\tqr\tx9375 \uldb \f1\fs22 What's new in this version?\plain\b\fs22 {\v VGD3_Y>main}\plain\f0\b\fs24 
\par \pard\sb15\sa55\sl275\tqr\tx9375 \uldb \f1\fs22 System requirements\plain\b\fs22 {\v Systemrequirements>main}\plain\f0\b\fs24 
\par \pard\sb15\sa55\sl275\tqr\tx9375 \uldb \f1\fs22 License\plain\b\fs22 {\v License>main}\plain\f0\b\fs24 
\par \pard\sb15\sa55\sl275\tqr\tx9375 \uldb \f1\fs22 Credits\plain\b\fs22 {\v Credits>main}\plain\f0\b\fs24 
\par \pard\sb15\sa55\sl275\tqr\tx9375 \uldb \f1\fs22 What's cooking?\plain\b\fs22 {\v 33PS0H>main}\plain\f0\b\fs24 
\par \pard\sb15\sa55\sl275\tqr\tx9375 \uldb \f1\fs22 Support\plain\b\fs22 {\v Support>main}\plain\f0\b\fs24 
\par \pard\sb15\sa55\sl275\tqr\tx9375 \uldb \f1\fs22 Alternatives\plain\b\fs22 {\v Alternatives>main}\plain\f0\b\fs24 
\par \pard\sb235\sa115\tqr\tx9375 \f1\fs28 Installing GpProfile\plain\f0\fs24 
\par \pard\sb15\sa55\sl275\tqr\tx9375 \uldb \f1\b\fs22 Small and simple\plain\b\fs22 {\v Smallandsimple>main}\plain\f0\b\fs24 
\par \pard\sb235\sa115\tqr\tx9375 \f1\fs28 Guided tour\plain\f0\fs24 
\par \pard\sb15\sa55\sl275\tqr\tx9375 \uldb \f1\b\fs22 Hands-on\plain\b\fs22 {\v L__MF8>main}\plain\f0\b\fs24 
\par \pard\sb235\sa115\tqr\tx9375 \f1\fs28 Using GpProfile\plain\f0\fs24 
\par \pard\sb15\sa55\sl275\tqr\tx9375 \uldb \f1\b\fs22 User interface\plain\b\fs22 {\v Userinterface>main}\plain\f0\b\fs24 
\par \pard\sb15\sa55\sl275\tqr\tx9375 \uldb \f1\fs22 Common functions\plain\b\fs22 {\v Commonfunctions>main}\plain\f0\b\fs24 
\par \pard\sb15\sa55\sl275\tqr\tx9375 \uldb \f1\fs22 Layout Management\plain\b\fs22 {\v LayoutManagement>main}\plain\f0\b\fs24 
\par \pard\sb15\sa55\sl275\tqr\tx9375 \uldb \f1\fs22 Instrumentation\plain\b\fs22 {\v Instrumentation3>main}\plain\f0\b\fs24 
\par \pard\sb15\sa55\sl275\tqr\tx9375 \uldb \f1\fs22 Analysis\plain\b\fs22 {\v Analysis3>main}\plain\f0\b\fs24 
\par \pard\sb15\sa55\sl275\tqr\tx9375 \uldb \f1\fs22 Remote Profiling\plain\b\fs22 {\v RemoteProfiling>main}\plain\f0\b\fs24 
\par \pard\sb15\sa55\sl275\tqr\tx9375 \uldb \f1\fs22 DLL and Package Profiling\plain\b\fs22 {\v DLLandPackageProfiling>main}\plain\f0\b\fs24 
\par \pard\sb15\sa55\sl275\tqr\tx9375 \uldb \f1\fs22 Shortcut keys\plain\b\fs22 {\v Shortcutkeys>proc}\plain\f0\b\fs24 
\par \pard\sb235\sa115\tqr\tx9375 \f1\fs28 GpProfile Source\plain\f0\fs24 
\par \pard\sb15\sa55\sl275\tqr\tx9375 \uldb \f1\b\fs22 Full Source Code Included\plain\b\fs22 {\v FullSourceCodeIncluded>main}\plain\f0\b\fs24 
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0001:0001}
{\up $}{\footnote\pard\plain{\up $} What is GpProfile?}
{\up #}{\footnote\pard\plain{\up #} WhatisGpProfile.}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} What is GpProfile?:}
\f1\fs32 What is GpProfile?
\par \pard\sb95\sl275 \plain\fs20 GpProfile is a utility that allows Delphi developers to check the performance of their applications, find bottlenecks and remove them. In short, it is a \ul profiler\plain\fs20 {\v 13KNTH8}.
\par GpProfile will help you speed up your Delphi programs. Delphi version 2, 3, and 4 are supported. As you will see, GpProfile is intuitive to use and in no time you programs will run faster.
\par Best of all, GpProfile is completely free and even comes with full \uldb source code\plain\fs20 {\v FullSourceCodeIncluded>main}.
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0001:0002}
{\up $}{\footnote\pard\plain{\up $} Features}
{\up #}{\footnote\pard\plain{\up #} Features}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} Features:}
\b\fs32 Features
\par \pard\sb95\sl275\li355\fi-355\tx355 \plain\f2\fs20 \'b7\tab \f1 source instrumenting \ul profiler\plain\fs20 {\v 13KNTH8} for Delphi 2, 3, and 4
\par \f2 \'b7\tab \f1 written in Delphi 4, source included
\par \f2 \'b7\tab \f1 works with Windows 95, 98, NT 4, NT 5
\par \f2 \'b7\tab \f1 free of charge for any use
\par \f2 \'b7\tab \f1 can \ul profile\plain\fs20 {\v S2BL_O} programs, DLLs, and packages
\par \f2 \'b7\tab \f1 conditional compilation (IFDEF) support
\par \f2 \'b7\tab \f1 multithreaded program support
\par \f2 \'b7\tab \f1 ability to instrument procedures, written in built-in assembler
\par \f2 \'b7\tab \f1 integrated source preview
\par \f2 \'b7\tab \f1 integrated result viewer
\par \f2 \'b7\tab \ul \f1\ul profiling\plain\fs20 {\v 3T5._U4} results can be exported to standard delimited format
\par \pard\sb95\sl275\li355\fi-355\tx355 \f2 \'b7\tab \uldb \f1 API\plain\fs20 {\v API>main} for profiling control
\par \f2 \'b7\tab \f1 conditional API execution with \uldb metacomments\plain\fs20 {\v Metacomments>main}
\par \f2 \'b7\tab \uldb \f1 layout manager\plain\fs20 {\v LayoutManager>main}
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0001:0003}
{\up $}{\footnote\pard\plain{\up $} How GpProfile works?}
{\up #}{\footnote\pard\plain{\up #} HowGpProfileworks.}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} How GpProfile works?:}
\b\fs32 How GpProfile works?
\par \pard\sb95\sl275 \plain\fs20 GpProfile does it's magic by \ul instrumenting\plain\fs20 {\v URREPO} the \ul target\plain\fs20 {\v MH4Q7J} (translation: changing your program's source code). Special calls to time measuring routines are inserted into the target, which you must then recompile and run. Instrumented target records time passed inside procedures. At the end of run GpProfile reads, analyses and displays recorded \ul profile\plain\fs20 {\v S2BL_O}.
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0001:0004}
{\up $}{\footnote\pard\plain{\up $} Warning!}
{\up #}{\footnote\pard\plain{\up #} Warning.}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} Warning!:}
\b\fs32 Warning!
\par \pard\sb95\sl275 \plain\fs20 GpProfile is tampering with your source files! I'm trying to make things as safe as possible but there is always a possibility that GpProfile will destroy your most important file. I cannot take the responsibility for anything that will happen to your source files if you use GpProfile. Always make a backup copy!
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0001:0005}
{\up $}{\footnote\pard\plain{\up $} Known problems}
{\up #}{\footnote\pard\plain{\up #} Knownproblems}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} Known problems:}
\b\fs32 Known problems
\par \pard\sb95\sl275\li355\fi-355\tx355 \plain\f2\fs20 \'b7\tab \f1 Instrumenting the program with one comment type and then uninstrumenting with another type is a sure way to trash the program!
\par \f2 \'b7\tab \f1 GpProfile may display error Unable to replace image on startup and then terminate. This is caused by outdated comctl32 library. Get a new one from Microsoft ( http://www.microsoft.com/msdownload/ieplatform/ie/comctrlx86.asp \uldb \{bmc bm0.BMP\}{\v !EF(`http://www.microsoft.com/msdownload/ieplatform/ie/comctrlx86.asp ',`',1,`')}\plain\fs20 ).
\par \f2 \'b7\tab \f1 Because of a bug in an installation script GpProfile may not get correctly registered with Delphi when installed on Windows 95/98. If you can't find GpProfile entry in Tools menu, exit Delphi, run \i GPPROF /REGISTER\plain\fs20  and restart Delphi.
\par \pard\sb95\sl275\li355\fi-355\tx355 \f2 \'b7\tab \f1 $INCLUDE is only partially supported - included files are processed but procedures in included files cannot be instrumented.
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0001:0006}
{\up $}{\footnote\pard\plain{\up $} What's new in this version?}
{\up #}{\footnote\pard\plain{\up #} VGD3_Y}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} What's new in this version?:}
\b\fs32 What's new in this version?
\par \pard\sb95\sl275 \plain\fs20 From version 1.2.1 to 1.3, following changes were made:
\par \pard\sb95\sl275\li355\fi-355\tx355 \f2 \'b7\tab \f1 Support for DLL \ul profiling\plain\fs20 {\v 3T5._U4} added.Profiling starts when DLL is loaded and stops when DLL is unloaded.
\par \f2 \'b7\tab \f1 Support for package profiling added. Profiling starts when package is loaded and stops when package is unloaded.
\par \f2 \'b7\tab \f1 Parser bug fixed. Code, instrumented with \{\-$IFDEF GpProfile\'7d markers could not be uninstrumented. 
\par \f2 \'b7\tab \f1 Parser bug fixed. Sometimes GpProfile could not find all files, included in the parsed project.
\par \f2 \'b7\tab \f1 Parser bug fixed. Named used units were not found if path started with '\'5c' character (example: test in '\'5cdev\'5ctest.pas').
\par \pard\sb95\sl275\li355\fi-355\tx355 \f2 \'b7\tab \f1 Small command line parser bug fixed.
\par \f2 \'b7\tab \f1 Fixed several bugs related to output directory processing.
\par \f2 \'b7\tab \f1 Better handling of ComCtl32 version problems.
\par \f2 \'b7\tab \f1 Better error handling in file access procedures.
\par \f2 \'b7\tab \f1 Better error handling in client module (gpprof.pas).
\par \f2 \'b7\tab \f1 Source preview window is refreshed after \ul instrumentation\plain\fs20 {\v 96EE5P}.
\par \f2 \'b7\tab \f1 Included are few fixes, contributed by Fr\'e9d\'e9ric Libaud, flibaud@club-internet.fr.
\par \f2 \'b7\tab \f1 Fixed incorrect behaviour when output directory was a relative path.
\par \pard\sb95\sl275\li355\fi-355\tx355 \f2 \'b7\tab \f1 Slight parser speedup.
\par \pard\sb95\sl275\tx355 From version 1.2 to 1.2.1, following changes were made:
\par \pard\sb95\sl275\li355\fi-355\tx355 \f2 \'b7\tab \f1 Parser bug fixed. $IFOPT compiler directive was not recognised and could cause wrongly instrumented source that couldn't be automatically uninstrumented.
\par \f2 \'b7\tab \f1 Parser bug fixed. Sometimes units were excluded even if they were not listed in \i Excluded units\plain\fs20  list.
\par \f2 \'b7\tab \f1\i Park\plain\fs20  button added to title bar.
\par \pard\sb95\sl275\tx355 From version 1.1 to 1.2, following changes were made:
\par \pard\sb95\sl275\li355\fi-355\tx355 \f2 \'b7\tab \f1 Conditional compilation is fully supported!
\par \f2 \'b7\tab \f1 GpProfile now ignores all text following final end.
\par \f2 \'b7\tab \f1 New menu entry in Delphi's Tools menu: GpProfile - Remove instrumentation
\par \f2 \'b7\tab \f1 Fixed bug in TGpArrowListView (arrows were not drawn correctly)
\par \f2 \'b7\tab \f1 Fixed bug in Instrument&Run and Run (sometimes GpProfile crashed instead of running Delphi)
\par \f2 \'b7\tab \f1 Fixed bug when fetching library search path from registry.
\par \f2 \'b7\tab \f1 Exporting slightly polished
\par \f2 \'b7\tab \f1 Color of background in source preview window is now shown correctly
\par \pard\sb95\sl275\li355\fi-355\tx355 \f2 \'b7\tab \f1 Small bugs in layout manager fixed
\par \f2 \'b7\tab \f1 Caller/Called views are resized proportionally when form is resized
\par \f2 \'b7\tab \f1 Fixed bug when GpProfile would select wrong version of Delphi for a new project
\par \pard\sb95\sl275\tx355 From version 1.0 to 1.1, following changes were made:
\par \pard\sb95\sl275\li355\fi-355\tx355 \f2 \'b7\tab \f1 Added \b limited\plain\fs20  support for $INCLUDE directive; included files are parsed but procedures in them cannot be instrumented
\par \f2 \'b7\tab \f1 Ability to display and \uldb browse\plain\fs20 {\v Browserbuttons>proc} \uldb caller\plain\fs20 {\v Callersview>proc}/\uldb called\plain\fs20 {\v Calledview>proc} statistics 
\par \f2 \'b7\tab \f1 Added ability to \uldb show/hide Source Preview\plain\fs20 {\v JXV0WY>proc} window
\par \f2 \'b7\tab \f1 Source preview is now \uldb syntax highlighted\plain\fs20 {\v Credits>main} 
\par \f2 \'b7\tab \f1 Context sensitive help, accessible with F1 key
\par \f2 \'b7\tab \f1 Full source package includes help, generated with \uldb Time2HELP\plain\fs20 {\v Credits>main}
\par \f2 \'b7\tab \f1 Program history included in About box
\par \pard\sb95\sl275\li355\fi-355\tx355 \f2 \'b7\tab \f1 Fixed two stupid bugs that made profiling almost impossible
\par \f2 \'b7\tab \f1 Executable renamed to GPPROF.EXE due to occasional installation problems
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0001:0007}
{\up $}{\footnote\pard\plain{\up $} System requirements}
{\up #}{\footnote\pard\plain{\up #} Systemrequirements}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} System requirements:}
\b\fs32 System requirements
\par \pard\sb95\sl275 \plain\fs20 GpProfile works with Delphi 2, 3, and 4 in any flavour (Standard, Professional, and Client/Server).
\par GpProfile runs on most operating systems supported by Delphi (Windows 95, 98, NT 4, NT 5).
\par You will also need a lot of disk space (recorded data can easily consume couple of gigabytes). A fast computer is also recommended.
\par I do all the testing on NT 4 Workstation with Delphi 3 and Delphi 4. Other combinations are not thoroughly tested.
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0001:0008}
{\up $}{\footnote\pard\plain{\up $} License}
{\up #}{\footnote\pard\plain{\up #} License}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} License:}
\b\fs32 License
\par \pard\sb95\sl275 \plain\fs20 This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
\par This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
\par You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA, or check http://www.gnu.ai.mit.edu/copyleft/gpl.html \uldb \{bmc bm0.BMP\}{\v !EF(`http://www.gnu.ai.mit.edu/copyleft/gpl.html',`',1,`')}\plain\fs20 .
\par \pard\sb175\sa15 \b\fs22\cf1 More:
\par \pard\sa55\sl275 \uldb \plain\uldb\fs20 For mere humans\plain\fs20 {\v Formerehumans>main}\uldb 
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0001:0009}
{\up $}{\footnote\pard\plain{\up $} For mere humans}
{\up #}{\footnote\pard\plain{\up #} Formerehumans}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} For mere humans:}
\plain\b\fs32 For mere humans
\par \pard\sb95\sl275 \plain\fs20 What all this legal gibberish is trying to say is:
\par GpProfile is free! You may use it any way you want, at home and at work, on as many computers as you want. You may download the source and write your own \ul profiler\plain\fs20 {\v 13KNTH8} based on the source. I won't mind. \b But if you are a shareware writer and you like my profiler so much that you would like to donate a copy of your software for my personal use you can be sure I won't hold it against you!\plain\fs20 
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0001:000a}
{\up $}{\footnote\pard\plain{\up $} Credits}
{\up #}{\footnote\pard\plain{\up #} Credits}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} Credits:}
\b\fs32 Credits
\par \pard\sb95\sl275 \plain\fs20 Writing GpProfile would surely take more time without these free components:
\par \pard\sb95\sl275\li355\fi-355\tx355 \f2 \'b7\tab \f1 BrowseFolder by Todd Fast
\par \f2 \'b7\tab \f1 EZDSL by Julian M Bucknall
\par \f2 \'b7\tab \f1 FPURLLabel by Filippo Passeggieri
\par \f2 \'b7\tab \f1 mPasLex and mwCustomEdit by Martin Waldenburg
\par \f2 \'b7\tab \f1 TRotateLabel by J\'f6rg Lingner
\par \f2 \'b7\tab \f1 Widget by Robert R. Marsh, SJ
\par \pard\sb95\sl275\tx355 I would also like to thank a Richard Fellner, who donated a registered version of his beautiful installation program INF-TOOL.
\par \pard\sb95\sl275\tx355 Also, GpProfile wouldn't be the same without Uros Mesojedec, who created the program icon.
\par \pard\sb95\sl275\tx355 Delphi 2 version wouldn't be here without Fulvio Guzzon, who converted the gpprof.pas file.
\par \pard\sb95\sl275\tx355 I would like to thank Marko Bohanec and Andy Jeffries for providing me with a mirror download site.
\par \pard\sb95\sl275\tx355 John Hamm enhanced component gpArrowListView.
\par \pard\sb95\sl275\tx355 Source documentation is generated with Time2HELP, donated by Digital Logikk AS.
\par \pard\sb95\sl275\tx355 Links to components and their authors are available on the page http://www.eccentrica.org/gabr/gpprofile/credits.htm \uldb \{bmc bm0.BMP\}{\v !EF(`http://www.eccentrica.org/gabr/gpprofile/credits.htm',`',1,`')}\plain\fs20  and in About window (select \b Help.About\plain\fs20  in GpProfile).
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0001:000b}
{\up $}{\footnote\pard\plain{\up $} What's cooking?}
{\up #}{\footnote\pard\plain{\up #} 33PS0H}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} What's cooking?:}
\b\fs32 What's cooking?
\par \pard\sb95\sl275 \plain\fs20 A lot. I won't run out of ideas soon. I'll just give you a few samples of features waiting to be implemented.
\par \pard\sb175\sa15 \b\fs22\cf1 More:
\par \pard\sa55\sl275 \uldb \plain\uldb\fs20 Instrumentation\plain\fs20 {\v Instrumentation1>proc}\uldb 
\par Execution\plain\fs20 {\v Execution>proc}\uldb 
\par Analysis\plain\fs20 {\v Analysis1>proc}\uldb 
\par General\plain\fs20 {\v General>proc}\uldb 
\par \page
{\up $}{\footnote\pard\plain{\up $} Introduction - What's cooking? - Instrumentation}
{\up #}{\footnote\pard\plain{\up #} Instrumentation1}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Instrumentation:}
\plain\b\fs24 Instrumentation
\par \pard\sb95\sl275\li355\fi-355\tx355 \plain\f2\fs20 \'b7\tab \f1 full $INCLUDE support
\par \f2 \'b7\tab \f1 tight integration with Delphi IDE
\par \page
{\up $}{\footnote\pard\plain{\up $} Execution}
{\up #}{\footnote\pard\plain{\up #} Execution}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Execution:}
\b\fs24 Execution
\par \pard\sb95\sl275\li355\fi-355\tx355 \plain\f2\fs20 \'b7\tab \f1 more precise time measurement (at least under Windows NT)
\par \f2 \'b7\tab \f1 faster and less disk-intensive operation during \ul profiling\plain\fs20 {\v 3T5._U4} phase
\par \f2 \'b7\tab \f1 idle time measurement
\par \f2 \'b7\tab \f1 better API
\par \page
{\up $}{\footnote\pard\plain{\up $} Introduction - What's cooking? - Analysis}
{\up #}{\footnote\pard\plain{\up #} Analysis1}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Analysis:}
\b\fs24 Analysis
\par \pard\sb95\sl275\li355\fi-355\tx355 \plain\f2\fs20 \'b7\tab \f1 snapshot comparison
\par \f2 \'b7\tab \f1 filters
\par \f2 \'b7\tab \f1 call graph analysis
\par \f2 \'b7\tab \f1 coverage analysis
\par \f2 \'b7\tab \f1 printing
\par \page
{\up $}{\footnote\pard\plain{\up $} General}
{\up #}{\footnote\pard\plain{\up #} General}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} General:}
\b\fs24 General
\par \pard\sb95\sl275\li355\fi-355\tx355 \plain\f2\fs20 \'b7\tab \f1 shortcut reassignment
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0001:000c}
{\up $}{\footnote\pard\plain{\up $} Support}
{\up #}{\footnote\pard\plain{\up #} Support}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} Support:}
\b\fs32 Support
\par \pard\sb95\sl275 \plain\fs20 If you have problems running GpProfile, first check the web (http://www.eccentrica.org/gabr/gpprofile/gpprofile.htm\uldb \{bmc bm0.BMP\}{\v !EF(`http://www.eccentrica.org/gabr/gpprofile/gpprofile.htm',`',1,`')}\plain\fs20 ) to see if you're running a newest version. Be sure to add yourself to GpProfile Announcement List (subscription form available on above-mentioned page).
\par If you need more information, email me at primoz.gabrijelcic@altavista.net\uldb \{bmc bm0.BMP\}{\v !EF(`http://www.eccentrica.org/gabr/gpprofile/gpprofile.htm',`',1,`')}\plain\fs20 .
\par \pard\sb175\sa15 \b\fs22\cf1 More:
\par \pard\sa55\sl275 \uldb \plain\uldb\fs20 Syntax errors\plain\fs20 {\v Syntaxerrors>proc}\uldb 
\par GPPROF and GPPROFH\plain\fs20 {\v GPPROFandGPPROFH>proc}\uldb 
\par Backup copies\plain\fs20 {\v Backupcopies>proc}\uldb 
\par Make a backup!\plain\fs20 {\v Makeabackup.>proc}\uldb 
\par \page
{\up $}{\footnote\pard\plain{\up $} Syntax errors}
{\up #}{\footnote\pard\plain{\up #} Syntaxerrors}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Syntax errors:}
\plain\b\fs24 Syntax errors
\par \pard\sb95\sl275 \plain\fs20 If your source code contains syntax errors, GpProfile may not be able to properly instrument the \ul target\plain\fs20 {\v MH4Q7J}.  If this happens, you may not receive an error message indicating a syntax problem until GpProfile invokes the Delphi IDE, and you attempt to execute your application. GpProfile is not designed to detect syntax errors. The best recommendation is to make sure that your project will compile under the Delphi IDE prior to running it through GpProfile.
\par \page
{\up $}{\footnote\pard\plain{\up $} GPPROF and GPPROFH}
{\up #}{\footnote\pard\plain{\up #} GPPROFandGPPROFH}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} GPPROF and GPPROFH:}
\b\fs24 GPPROF and GPPROFH
\par \pard\sb95\sl275 \plain\fs20 GpProfile adds two units to every project it instruments. Those units are called GPPROF and GPPROFH. If your project uses modules with the same names, the project won't compile. This is a limitation of Delphi. Workaround: rename your units.
\par \page
{\up $}{\footnote\pard\plain{\up $} Backup copies}
{\up #}{\footnote\pard\plain{\up #} Backupcopies}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Backup copies:}
\b\fs24 Backup copies
\par \pard\sb95\sl275 \plain\fs20 Two backup files are always kept: .BK2 is older, .BK1 is newer. Therefore, it is possible to restore the source even after two operations (for example failed \ul instrumentation\plain\fs20 {\v 96EE5P} and failed deinstrumentation). 
\par \page
{\up $}{\footnote\pard\plain{\up $} Make a backup!}
{\up #}{\footnote\pard\plain{\up #} Makeabackup.}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Make a backup!:}
\b\fs24 Make a backup!
\par \pard\sb95\sl275 \plain\fs20 You should always create backup before trying to run GpProfile just to be on the safe side.
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0001:000d}
{\up $}{\footnote\pard\plain{\up $} Alternatives}
{\up #}{\footnote\pard\plain{\up #} Alternatives}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} Alternatives:}
\b\fs32 Alternatives
\par \pard\sb95\sl275 \plain\fs20 If GpProfile doesn't cover your needs, you might want to check other Delphi profilers:
\par \pard\sb175\sa15 \b\fs22\cf1 More:
\par \pard\sa55\sl275 \uldb \plain\uldb\fs20 Delphi Profiler (Axiomatic Software)\plain\fs20 {\v EB28O_>proc}\uldb 
\par Lightning (Techmarc)\plain\fs20 {\v 31JJ9O3>proc}\uldb 
\par ProDelphi (Helmuth J. H. Adolph)\plain\fs20 {\v 2OLV8_>proc}\uldb 
\par SourceCoder (Peter Tiemann)\plain\fs20 {\v UHDJ5V>proc}\uldb 
\par Speed Daemon (IntegrationWare)\plain\fs20 {\v 3YR2_VG>proc}\uldb 
\par SpeedItUp (Robert Lechner)\plain\fs20 {\v .BW0NU>proc}\uldb 
\par VTune (Intel)\plain\fs20 {\v 13XLEQR>proc}\uldb 
\par \page
{\up $}{\footnote\pard\plain{\up $} Delphi Profiler (Axiomatic Software)}
{\up #}{\footnote\pard\plain{\up #} EB28O_}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Delphi Profiler (Axiomatic Software):}
\plain\b\fs24 Delphi Profiler (Axiomatic Software)
\par \pard\sb95\sl275\li355\fi-355\tx355 \plain\f2\fs20 \'b7\tab \f1 http://www.axiomati.demon.co.uk/Frogbit/examples-prof.htm \uldb \{bmc bm0.BMP\}{\v !EF(`http://www.axiomati.demon.co.uk/Frogbit/examples-prof.htm',`',1,`')}\plain\fs20 
\par \f2 \'b7\tab \f1 simple source code \ul profiler\plain\fs20 {\v 13KNTH8} for Delphi 2 and 3
\par \f2 \'b7\tab \f1 free with source
\par \page
{\up $}{\footnote\pard\plain{\up $} Lightning (Techmarc)}
{\up #}{\footnote\pard\plain{\up #} 31JJ9O3}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Lightning (Techmarc):}
\b\fs24 Lightning (Techmarc)
\par \pard\sb95\sl275\li355\fi-355\tx355 \plain\f2\fs20 \'b7\tab \f1 http://www.techmarc.ndirect.co.uk \uldb \{bmc bm0.BMP\}{\v !EF(`http://www.techmarc.ndirect.co.uk',`',1,`')}\plain\fs20 
\par \f2 \'b7\tab \f1 source code \ul profiler\plain\fs20 {\v 13KNTH8}
\par \f2 \'b7\tab \f1 Delphi 3
\par \f2 \'b7\tab \f1 free
\par \f2 \'b7\tab \f1 last update March 17, 1998
\par \page
{\up $}{\footnote\pard\plain{\up $} ProDelphi (Helmuth J. H. Adolph)}
{\up #}{\footnote\pard\plain{\up #} 2OLV8_}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} ProDelphi (Helmuth J. H. Adolph):}
\b\fs24 ProDelphi (Helmuth J. H. Adolph)\f2 
\par \pard\sb95\sl275\li355\fi-355\tx355 \plain\fs20 http://www.hp.europe.de/prodelphi\uldb  \{bmc bm0.BMP\}{\v !EF(`http://www.hp.europe.de/prodelphin.co.uk/Frogbit/examples-prof.htm',`',1,`')}\plain\fs20 
\par \f2 \'b7\tab \f1 source instrumenting \ul profiler\plain\fs20 {\v 13KNTH8} for Delphi 2, 3, and 4
\par \f2 \'b7\tab \f1 $ 50
\par \page
{\up $}{\footnote\pard\plain{\up $} SourceCoder (Peter Tiemann)}
{\up #}{\footnote\pard\plain{\up #} UHDJ5V}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} SourceCoder (Peter Tiemann):}
\b\fs24 SourceCoder (Peter Tiemann)\f2 
\par \pard\sb95\sl275\li355\fi-355\tx355 \plain\fs20 http://www.preview.org/e/scoder.shtml \uldb \{bmc bm0.BMP\}{\v !EF(`http://www.preview.org/e/scoder.shtml ',`',1,`')}\plain\fs20 
\par \f2 \'b7\tab \ul \f1\ul profiler\plain\fs20 {\v 13KNTH8}, coverage analysis, and much more
\par \f2 \'b7\tab \f1 Delphi 1, 2, 3, and 4
\par \f2 \'b7\tab \f1 $89
\par \f2 \'b7\tab \f1 recommended!
\par \page
{\up $}{\footnote\pard\plain{\up $} Speed Daemon (IntegrationWare)}
{\up #}{\footnote\pard\plain{\up #} 3YR2_VG}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Speed Daemon (IntegrationWare):}
\b\fs24 Speed Daemon (IntegrationWare)
\par \pard\sb95\sl275\li355\fi-355\tx355 \plain\f2\fs20 \'b7\tab \f1 http://www.speeddaemon.integrationware.com/ \uldb \{bmc bm0.BMP\}{\v !EF(`http://www.speeddaemon.integrationware.com/',`',1,`')}\plain\fs20 
\par \f2 \'b7\tab \f1 source code \ul profiler\plain\fs20 {\v 13KNTH8} for Delphi 1, 2, and 3
\par \f2 \'b7\tab \f1 $149
\par \f2 \'b7\tab \f1 not updated for a veeeery long time
\par \page
{\up $}{\footnote\pard\plain{\up $} SpeedItUp (Robert Lechner)}
{\up #}{\footnote\pard\plain{\up #} .BW0NU}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} SpeedItUp (Robert Lechner):}
\b\fs24 SpeedItUp (Robert Lechner)
\par \pard\sb95\sl275\li355\fi-355\tx355 \plain\f2\fs20 \'b7\tab \f1 http://members.xoom.com/SpeedItUp/index.htm \uldb \{bmc bm0.BMP\}{\v !EF(`http://members.xoom.com/SpeedItUp/index.htm',`',1,`')}\plain\fs20 
\par \f2 \'b7\tab \f1 source code \ul profiler\plain\fs20 {\v 13KNTH8}
\par \f2 \'b7\tab \f1 Delphi 3, 4
\par \f2 \'b7\tab \f1 free
\par \page
{\up $}{\footnote\pard\plain{\up $} VTune (Intel)}
{\up #}{\footnote\pard\plain{\up #} 13XLEQR}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} VTune (Intel):}
\b\fs24 VTune (Intel)\f2 
\par \pard\sb95\sl275\li355\fi-355\tx355 \plain\fs20 http://developer.intel.com/vtune/analyzer/index.htm \uldb \{bmc bm0.BMP\}{\v !EF(`http://developer.intel.com/vtune/analyzer/index.htm',`',1,`')}\plain\fs20 
\par \f2 \'b7\tab \f1 sampling \ul profiler\plain\fs20 {\v 13KNTH8} and much more
\par \f2 \'b7\tab \f1 not working very well with Delphi
\par \f2 \'b7\tab \f1 $429
\par \f2 \'b7\tab \f1 recommended!
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0002:0001}
{\up $}{\footnote\pard\plain{\up $} Small and simple}
{\up #}{\footnote\pard\plain{\up #} Smallandsimple}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} Small and simple:}
\b\fs32 Small and simple
\par \pard\sb95\sl275 \plain\fs20 I want to keep distribution as small as possible. Therefore, GpProfile is distributed without a specialised installation program. All the work is done by Windows itself with a help of a very special program - \uldb INF-TOOL\plain\fs20 {\v Credits>main}.
\par Although installation is very simple, it is complete. If you are reading this, everything went well and GpProfile is installed and integrated with Delphi IDE.
\par Removal is also very simple - just select Add/Remove Program in Control Panel or Uninstall icon in GpProfile folder. Removal process will automatically remove Delphi IDE integration, GpProfile folder and all files.
\par \pard\sb175\sa15 \b\fs22\cf1 More:
\par \pard\sa55\sl275 \uldb \plain\uldb\fs20 Delphi IDE integration\plain\fs20 {\v DelphiIDEintegration>main}\uldb 
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0002:0002}
{\up $}{\footnote\pard\plain{\up $} Delphi IDE integration}
{\up #}{\footnote\pard\plain{\up #} DelphiIDEintegration}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} Delphi IDE integration:}
\plain\b\fs32 Delphi IDE integration
\par \pard\sb95\sl275 \plain\fs20 Currently, GpProfile is not very much integrated into Delphi IDE. Installation program extends Delphi Tools menu with a two items. First opens current project in GpProfile and second removes all \ul instrumentation\plain\fs20 {\v 96EE5P} from current project. Those two menu items work only if
\par \pard\sb95\sl275\li355\fi-355\tx355 1.\tab Project was compiled at least once after the Delphi was started.
\par 2.\tab Project executable is stored in the same directory as main project file (.dpr).
\par \pard\sb95\sl275\tx355 Future GpProfile versions will remove this limitations and offer tighter Delphi integration.
\par \page
{\up $}{\footnote\pard\plain{\up $} Hands-on}
{\up #}{\footnote\pard\plain{\up #} L__MF8}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} Hands-on:}
\b\fs32 Hands-on
\par \pard\sb95\sl275 \plain\fs20 An easiest way to understand GpProfile's approach is to see it in action. I have prepared a guided tour through simple \ul profiling\plain\fs20 {\v 3T5._U4} session, which will help you understand the GpProfile's design and operation.
\par To take this tour you will need to have Delphi's demos installed, as we will be using one of the demos as example.
\par \pard\sb175\sa15 \b\fs22\cf1 More:
\par \pard\sa55\sl275 \uldb \plain\uldb\fs20 Starting up\plain\fs20 {\v Startingup>proc}\uldb 
\par Browsing the target\plain\fs20 {\v Browsingthetarget>proc}\uldb 
\par Instrumenting the target\plain\fs20 {\v Instrumentingthetarget>proc}\uldb 
\par Running Threads demo\plain\fs20 {\v RunningThreadsdemo>proc}\uldb 
\par Analysing the results\plain\fs20 {\v Analysingtheresults>proc}\uldb 
\par Improving the measurement\plain\fs20 {\v Improvingthemeasurement>proc}\uldb 
\par More Details\plain\fs20 {\v MoreDetails>proc}\uldb 
\par Removing instrumentation\plain\fs20 {\v Removinginstrumentation>proc}\uldb 
\par \page
{\up $}{\footnote\pard\plain{\up $} Starting up}
{\up #}{\footnote\pard\plain{\up #} Startingup}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Starting up:}
\plain\b\fs24 Starting up
\par \pard\sb95\sl275 \plain\fs20 There are two ways to start the GpProfile.
\par From the \b Tools\plain\fs20  menu.
\par \pard\sb95\sl275\li355\fi-355\tx355 1.\tab Start the Delphi.
\par 2.\tab Load ThrdDemo project (located in Demos\'5cThreads under the main Delphi folder).
\par 3.\tab Compile it (Ctrl+F9). This will a) create $EXENAME macro that is used when running GpProfile from the Tools menu and b) check the syntax of the program.
\par 4.\tab Run GpProfile from the \b Tools\plain\fs20  menu.
\par \pard\sb95\sl275\tx355 Standalone.
\par \pard\sb95\sl275\li355\fi-355\tx355 1.\tab Start the GpProfile.
\par 2.\tab Select \b Project.Open\plain\fs20  and open ThrdDemo.dpr (located in Demos\'5cThreads under the main Delphi folder).
\par \pard\sb55\sa55\sl275\tx355\tx715 \{bmc bm1.BMP\}
\par \page
{\up $}{\footnote\pard\plain{\up $} Browsing the target}
{\up #}{\footnote\pard\plain{\up #} Browsingthetarget}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Browsing the target:}
\b\fs24 Browsing the target
\par \pard\sb95\sl275 \plain\fs20 As you can see in the \i Units\plain\fs20  list, ThrdDemo uses two units from the same folder,  SortThds and ThSort. Click on the SortThds (on the unit name, not into the checkbox). GpProfile will fill the \i Classes\plain\fs20  and \i Procedures\plain\fs20  lists with names of classes and procedures declared in unit SortThds.
\par Now click on class TBubbleSort in the \i Classes\plain\fs20  list. GpProfile will update \i Procedures\plain\fs20  list to contain only the methods from the TBubbleSort class. If you now click on the Sort procedure (the only one), GpProfile will load file SortThds.pas into the bottom window and position it at the beginning of the Sort procedure.
\par \pard\sb55\sa55\sl275\tx355\tx715 \{bmc bm2.BMP\}
\par \page
{\up $}{\footnote\pard\plain{\up $} Instrumenting the target}
{\up #}{\footnote\pard\plain{\up #} Instrumentingthetarget}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Instrumenting the target:}
\b\fs24 Instrumenting the target
\par \pard\sb95\sl275 \plain\fs20 Next, you will select the procedures you want to instrument. Core of the ThrdDemo program is contained in three threads: TBubbleSort, TQuickSort, and TSelectionSort. Each does the important part of the job in its Sort method. If you want to measure their respective times you must instrument these methods.
\par To do so, click \i <all classes>\plain\fs20  in the \i Classes \plain\fs20 list and then check the procedures \i TBubbleSort.Sort\plain\fs20 , \i TQuickSort.Sort\plain\fs20 , and \i TSelectionSort.Sort\plain\fs20 .
\par \pard\sb55\sa55\sl275\tx355\tx715 \{bmc bm3.BMP\}
\par \pard\sb95\sl275\tx355\tx715 Those checks have no immediate effect on the program. If you quit GpProfile at that step, your program will not be instrumented. You will finish the \ul instrumentation\plain\fs20 {\v 96EE5P} in the next step.
\par \page
{\up $}{\footnote\pard\plain{\up $} Running Threads demo}
{\up #}{\footnote\pard\plain{\up #} RunningThreadsdemo}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Running Threads demo:}
\b\fs24 Running Threads demo
\par \pard\sb95\sl275 \plain\fs20 To instrument the Threads demo, select \b Project.Instrument and Run\plain\fs20 . This will instrument the program and open it in Delphi. You'll have to confirm that you want to reload changed files.
\par \pard\sb55\sa55\sl275\tx355\tx715 \{bmc bm4.BMP\}
\par \pard\sb95\sl275\tx355\tx715 If you have started GpProfile from Delphi IDE through the Tools menu, GpProfile will just switch back to Delphi. If you have started GpProfile without starting Delphi, a fresh Delphi will be started for you.
\par \pard\sb95\sl275\tx355\tx715 If you have more than one Delphi installed, you should select the version you want to use with \b Project.Options\plain\fs20  before selecting \b Instrument and Run\plain\fs20 .
\par \pard\sb95\sl275\tx355\tx715 When you are back in Delphi IDE, compile the program (Ctrl+F9) and run it. Don't just press F9 (Run) as Delphi usually just runs the old uninstrumented EXE even if it knows that some files have changed. Go figure.
\par \pard\sb55\sa55\sl275\tx355\tx715 \{bmc bm5.BMP\}
\par \pard\sb95\sl275\tx355\tx715 In the ThrdDemo program click \i Start Sorting\plain\fs20 . After the program finished its job, close it by clicking the X button in upper right corner. GpProfile will automatically pop up and open the recorded data.
\par \page
{\up $}{\footnote\pard\plain{\up $} Analysing the results}
{\up #}{\footnote\pard\plain{\up #} Analysingtheresults}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Analysing the results:}
\b\fs24 Analysing the results
\par \pard\sb95\sl275 \plain\fs20 From the recorded data, you can see that Bubble sort is much slower than Selection sort, which is slower than Quick sort. You can now browse through other pages on Analysis tab and see how much time was used for different classes, units and threads.
\par \pard\sb55\sa55\sl275\tx355\tx715 \{bmc bm6.BMP\}
\par \page
{\up $}{\footnote\pard\plain{\up $} Improving the measurement}
{\up #}{\footnote\pard\plain{\up #} Improvingthemeasurement}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Improving the measurement:}
\b\fs24 Improving the measurement
\par \pard\sb95\sl275 \plain\fs20 The important part of \ul profiling\plain\fs20 {\v 3T5._U4} is knowledge of what you want to \ul profile\plain\fs20 {\v S2BL_O}. In this case you have measured how long it takes for threads to sort the data AND show this process to the user graphically. And it is obvious that graphical part of the program is taking much more time than the sorting itself. Exactly how much?
\par To find this out, look at the Sort methods. A short glance at the code shows that all sorting routines are using method VisualSwap to display a swapping operation. Therefore, you should instrument this method too.
\par \pard\sb55\sa55\sl275\tx355\tx715 \{bmc bm7.BMP\}
\par \pard\sb95\sl275\tx355\tx715 You must now again choose \b Project.Instrument and Run\plain\fs20 , accept the changes in Delphi, compile and run the program, click \i Start Sorting\plain\fs20  and close the program. This time the displayed results are completely different.
\par \pard\sb55\sa55\sl275\tx355\tx715 \{bmc bm8.BMP\}
\par \pard\sb95\sl275\tx355\tx715 This more exact picture clearly shows that most of the time is spent in the VisualSwap method. Bubble sort is still the slowest but it is now only two times slower than Selection sort (as opposed to nearly three times shown by previous measurement).
\par \page
{\up $}{\footnote\pard\plain{\up $} More Details}
{\up #}{\footnote\pard\plain{\up #} MoreDetails}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} More Details:}
\b\fs24 More Details
\par \pard\sb95\sl275 \plain\fs20 To get more details, you should enable \uldb caller\plain\fs20 {\v Callersview>proc}/\uldb called\plain\fs20 {\v Calledview>proc} analysis. Select \i Procedures\plain\fs20  tab, then select \b Layout.Show Called\plain\fs20 . A new list with \i Called procedures\plain\fs20  will appear. When you click a procedure in \i Procedures\plain\fs20  list, \i Called procedures\plain\fs20  list will display all procedures that were called from the selected procedure. In our simple example, only one procedure (VisualSwap) was called.
\par \pard\sb55\sa55\sl275\tx355\tx715 \{bmc bm9.BMP\}
\par \pard\sb95\sl275\tx355\tx715 It is also possible to all procedures that called selected procedure. When Procedures tab is active, select \b Layout.Show Callers\plain\fs20 . To see it in action, select VisualSwap. Three procedures will appear in \i Callers\plain\fs20  list, showing that VisualSwap was called from \i TBubbleSort.Sort, TSelectionSort.Sort, \plain\fs20 and\i  TQuickSort.Sort\plain\fs20 . Although \i Callers\plain\fs20  list displays caller names, all times in this list are times of selected procedure (\i VisualSwap\plain\fs20  in our example). Therefore, numbers in the following picture are telling us that \i VisualSwap\plain\fs20  took 1,707 seconds when called from \i TBubbleSort.Sort\plain\fs20 , 0,723 seconds when called from \i TSelectionSort.Sort\plain\fs20 , and 0,215 seconds when called from \i TQuickSort.Sort\plain\fs20 .
\par \pard\sb55\sa55\sl275\tx355\tx715 \{bmc bm10.BMP\}
\par \pard\sb95\sl275\tx355\tx715 Although there is no much data displayed in this example, you can try browsing through the procedures. Just double click any procedure in \i Callers\plain\fs20  or \i Called\plain\fs20  list and it will become active procedure. You can return to the previous selection with \uldb browser buttons\plain\fs20 {\v Browserbuttons>proc}, positioned in upper right corner of \i Procedures\plain\fs20  tab.\i  \plain\fs20 
\par \page
{\up $}{\footnote\pard\plain{\up $} Removing instrumentation}
{\up #}{\footnote\pard\plain{\up #} Removinginstrumentation}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Removing instrumentation:}
\b\fs24 Removing instrumentation
\par \pard\sb95\sl275 \plain\fs20 To remove all \ul instrumentation\plain\fs20 {\v 96EE5P} code from the ThrdDemo program, select \b Project.Remove Instrumentation\plain\fs20 , switch to Delphi, and recompile.
\par Alternatively, you can select \b Tools.GpProfile - remove instrumentation\plain\fs20  in Delphi.
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0003:0001}
{\up $}{\footnote\pard\plain{\up $} User interface}
{\up #}{\footnote\pard\plain{\up #} Userinterface}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} User interface:}
\b\fs32 User interface
\par \pard\sb95\sl275 \plain\fs20 Functionally, GpProfile is divided into two parts - \ul Instrumentation\plain\fs20 {\v 96EE5P} and Analysis. The user interface follows this division. The main part of GpProfile's form can be switched into instrumentation or analysis mode; there are two main toolbars, and two significant menus - Project (instrumentation part) and Profile (analysis part).
\par There is not much of the program dedicated for the housekeeping tasks. Beside the help system there are only two common functions - Preferences and Layout Manager, both accessible through the GpProfile menu or main (rightmost) toolbar.
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0003:0002}
{\up $}{\footnote\pard\plain{\up $} Common functions}
{\up #}{\footnote\pard\plain{\up #} Commonfunctions}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} Common functions:}
\b\fs32 Common functions
\par \pard\sb95\sl275 \plain\fs20 Common functions are accessible through the menus \b GpProfile\plain\fs20  and \b Help\plain\fs20  and through the main (second from the right) toolbar.
\par \{bml bm11.SHG\}
\par \{bml bm12.SHG\}
\par \{bml bm13.SHG\}
\par \pard\sb175\sa15 \b\fs22\cf1 More:
\par \pard\sa55\sl275 \uldb \plain\uldb\fs20 Preferences\plain\fs20 {\v Preferences>main}\uldb 
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0003:0003}
{\up $}{\footnote\pard\plain{\up $} Preferences}
{\up #}{\footnote\pard\plain{\up #} Preferences}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} Preferences:}
\plain\b\fs32 Preferences
\par \pard\sb95\sl275 \plain\fs20 Use \i Preferences\plain\fs20  dialog to set global options. These options will be used for all new projects. \i Preferences\plain\fs20  dialog has four pages - Instrumentation, Analysis, Excluded units, and Conditional defines.\b 
\par \pard\sb175\sa15 \fs22\cf1 More:
\par \pard\sa55\sl275 \uldb \plain\uldb\fs20 Instrumentation\plain\fs20 {\v Instrumentation2>proc}\uldb 
\par Analysis\plain\fs20 {\v Analysis2>proc}\uldb 
\par Excluded units\plain\fs20 {\v Excludedunits1>proc}\uldb 
\par Conditional defines\plain\fs20 {\v Conditionaldefines1>proc}\uldb 
\par \page
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Preferences - Instrumentation}
{\up #}{\footnote\pard\plain{\up #} Instrumentation2}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Instrumentation:}
\plain\b\fs24 Instrumentation
\par \pard\sb95\sl275 \plain\fs20 On \ul Instrumentation\plain\fs20 {\v 96EE5P} page you set defaults for various items relevant to the instrumentation process.
\par \pard\sb55\sa55\sl275\tx355\tx715 \{bmc bm14.BMP\}
\par \pard\sb95\sl275\tx355\tx715 \b Marker style
\par \pard\sb95\sl275\tx355\tx715 \plain\fs20 GpProfile uses markers to mark instrumented code in the program so it can be safely uninstrumented later. Default marker style is \i \{\->>GpProfile\'7d\plain\fs20 , which you can change to \i \{\-$IFDEF GpProfile\'7d\plain\fs20 . If you use the second option don't forget to manually $DEFINE GpProfile in all units you want to \ul profile\plain\fs20 {\v S2BL_O}.
\par \pard\sb95\sl275\tx355\tx715 \b Compiler version
\par \pard\sb95\sl275\tx355\tx715 \plain\fs20 Here you can select default Delphi environment if you have more than one Delphi installed.
\par \pard\sb95\sl275\tx355\tx715 \b Speed/Size
\par \pard\sb95\sl275\tx355\tx715 \plain\fs20 Profile files get pretty big (you'll reach gigabyte sizes without a problem) and sometimes you'll want to keep them smaller at the expense of \ul target\plain\fs20 {\v MH4Q7J} program speed. Beside uncompressed data, GpProfile supports two levels of compression.
\par \pard\sb95\sl275\tx355\tx715 \b Show all folders
\par \pard\sb95\sl275\tx355\tx715 \plain\fs20 Check if you want every new project to show all used units, not only units in the project folder.
\par \pard\sb95\sl275\tx355\tx715 \b Start \plain\ul\fs20 profiling\plain\fs20 {\v 3T5._U4}\b  on target startup
\par \pard\sb95\sl275\tx355\tx715 \plain\fs20 When you want to measure just some part of the program, you must disable profiling autostart with this option and start/stop profiling manually by using \uldb API\plain\fs20 {\v API>main} calls.
\par \page
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Preferences - Analysis}
{\up #}{\footnote\pard\plain{\up #} Analysis2}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Analysis:}
\b\fs24 Analysis
\par \pard\sb95\sl275 \plain\fs20 On \i Analysis\plain\fs20  page you set the parameters affecting the \ul profile\plain\fs20 {\v S2BL_O} analysis process. Currently, there is only one option.
\par \pard\sb55\sa55\sl275\tx355\tx715 \{bmc bm15.BMP\}
\par \pard\sb95\sl275\tx355\tx715 \b Hide procedures that were never executed
\par \pard\sb95\sl275\tx355\tx715 \plain\fs20 If checked (default), GpProfile will hide procedures, which were instrumented but never called, so the profile display will be more readable.
\par \page
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Preferences - Excluded units}
{\up #}{\footnote\pard\plain{\up #} Excludedunits1}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Excluded units:}
\b\fs24 Excluded units
\par \pard\sb95\sl275 \plain\fs20 On \i Excluded units\plain\fs20  page you set units that won't be parsed. Typically you put here system units, which you don't want to instrument anyway. This list contains all the units from Delphi 3 and Delphi 4 by default.
\par \pard\sb55\sa55\sl275\tx355\tx715 \{bmc bm16.BMP\}
\par \pard\sb95\sl275\tx355\tx715 \b Units
\par \pard\sb95\sl275\tx355\tx715 \plain\fs20 Simple Memo field with unit names. One per line, alphabetical order is not important. Case insensitive. If you would like to add another unit, just type it in. Likewise, if you would like to remove a unit, just delete it from this field.
\par \pard\sb95\sl275\tx355\tx715 \b Clear all
\par \pard\sb95\sl275\tx355\tx715 \plain\fs20 Clear the \i Units\plain\fs20  field. No units will be excluded.
\par \pard\sb95\sl275\tx355\tx715 \b Add from folder\plain\fs20 
\par \pard\sb95\sl275\tx355\tx715 Click this button to display folder selection dialog. All units from the selected folder will be added to the \i Units\plain\fs20  field.
\par \page
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Preferences - Conditional defines}
{\up #}{\footnote\pard\plain{\up #} Conditionaldefines1}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Conditional defines:}
\b\fs24 Conditional defines
\par \pard\sb95\sl275 \plain\fs20 On \i Conditional defines\plain\fs20  page you set symbols that should be pre-set for each parsed unit. Typically, you'll want to set \i Compiler defines\plain\fs20  and \i Project defines\plain\fs20 .
\par \pard\sb55\sa55\sl275\tx355\tx715 \{bmc bm17.BMP\}
\par \pard\sb95\sl275\tx355\tx715 \b Symbols
\par \pard\sb95\sl275\tx355\tx715 \plain\fs20 List of pre-set symbols 
\par \pard\sb95\sl275\tx355\tx715 \b Compiler defines\plain\fs20 
\par \pard\sb95\sl275\tx355\tx715 If checked (default), symbols CPU386, WIN32, and VER90/VER100/VER120 will be pre-set.
\par \pard\sb95\sl275\tx355\tx715 \b Console application\plain\fs20 
\par \pard\sb95\sl275\tx355\tx715 If checked (default for applications, which have \i Generate console application\plain\fs20  option set), symbol CONSOLE will be pre-set. You cannot set default value for this option.
\par \pard\sb95\sl275\tx355\tx715 \b Project defines\plain\fs20 
\par \pard\sb95\sl275\tx355\tx715 If checked (default), project symbols  (specified in Delphi IDE in \b Project.Options\plain\fs20 ) will be pre-set.
\par \pard\sb95\sl275\tx355\tx715 \b Disable user defines\plain\fs20 
\par \pard\sb95\sl275\tx355\tx715 If checked (default unchecked), additional user-defined symbols (added in this dialog) will be disabled.
\par \pard\sb95\sl275\tx355\tx715 \b Add\plain\fs20 
\par \pard\sb95\sl275\tx355\tx715 Adds user-defined symbol, specified in entry field.
\par \pard\sb95\sl275\tx355\tx715 \b Rename\plain\fs20 
\par \pard\sb95\sl275\tx355\tx715 Renames selected symbol to a name, specified in entry field. 
\par \pard\sb95\sl275\tx355\tx715 \b Delete\plain\fs20 
\par \pard\sb95\sl275\tx355\tx715 Deletes selected symbol.
\par \pard\sb95\sl275\tx355\tx715 \b Clear user\plain\fs20 
\par \pard\sb95\sl275\tx355\tx715 Removes all user-defined symbols.
\par \pard\sb95\sl275\tx355\tx715 \b Clear all\plain\fs20 
\par \pard\sb95\sl275\tx355\tx715 Removes all symbols.
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0003:0004}
{\up $}{\footnote\pard\plain{\up $} Layout Management}
{\up #}{\footnote\pard\plain{\up #} LayoutManagement}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} Layout Management:}
\b\fs32 Layout Management
\par \pard\sb95\sl275 \plain\fs20 While working with GpProfile you'll notice that it has persistent interface - everything you change (window position & size, list sizes, source preview height...) is be remembered for the next run. Therefore it is very easy to use GpProfile in two sizes - one small (to fit beside then Delphi IDE) and other maximised.
\par Layout Manager is a feature of GpProfile that allows you to use more than one UI arrangement. It is accessible through the menu \b Layout\plain\fs20  and through the layout (rightmost) toolbar. 
\par \pard\sb95\sl275 \{bml bm18.SHG\}
\par \{bml bm19.SHG\}
\par \pard\sb175\sa15 \b\fs22\cf1 More:
\par \pard\sa55\sl275 \uldb \plain\uldb\fs20 Show/Hide Source Preview\plain\fs20 {\v JXV0WY>proc}\uldb 
\par Show/Hide Callers\plain\fs20 {\v 9SB1PF>proc}\uldb 
\par Show/Hide Called\plain\fs20 {\v 56O7_HJ>proc}\uldb 
\par Layout Manager\plain\fs20 {\v LayoutManager>main}\uldb 
\par \page
{\up $}{\footnote\pard\plain{\up $} Show/Hide Source Preview}
{\up #}{\footnote\pard\plain{\up #} JXV0WY}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Show/Hide Source Preview:}
\plain\b\fs24 Show/Hide Source Preview
\par \pard\sb95\sl275 \plain\fs20 Use \i Show/Hide Source Preview\plain\fs20  switch to show or hide \uldb source preview\plain\fs20 {\v SourceprevieW1>proc} window.
\par \page
{\up $}{\footnote\pard\plain{\up $} Show/Hide Callers}
{\up #}{\footnote\pard\plain{\up #} 9SB1PF}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Show/Hide Callers:}
\b\fs24 Show/Hide Callers
\par \pard\sb95\sl275 \plain\fs20 Use \i Show/Hide Callers\plain\fs20  switch to show or hide \uldb callers\plain\fs20 {\v Callersview>proc} window.
\par \page
{\up $}{\footnote\pard\plain{\up $} Show/Hide Called}
{\up #}{\footnote\pard\plain{\up #} 56O7_HJ}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Show/Hide Called:}
\b\fs24 Show/Hide Called
\par \pard\sb95\sl275 \plain\fs20 Use \i Show/Hide Callers\plain\fs20  switch to show or hide \uldb called\plain\fs20 {\v Calledview>proc} window.
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0003:0005}
{\up $}{\footnote\pard\plain{\up $} Layout Manager}
{\up #}{\footnote\pard\plain{\up #} LayoutManager}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} Layout Manager:}
\b\fs32 Layout Manager
\par \pard\sb95\sl275 \plain\fs20 Layout Manager is implemented as a non-modal window meaning that you can continue to work with the GpProfile while it is displayed (you can for example fine-tune some UI settings).
\par \pard\sb55\sa55\sl275\tx355\tx715 \{bmc bm20.BMP\}
\par \pard\sb175\sa15\tx355\tx715 \b\fs22\cf1 More:
\par \pard\sa55\sl275\tx355\tx715 \uldb \plain\uldb\fs20 Adding a layout\plain\fs20 {\v Addingalayout>proc}\uldb 
\par \pard\sa55\sl275\tx355\tx715 Renaming a layout\plain\fs20 {\v Renamingalayout>proc}\uldb 
\par \pard\sa55\sl275\tx355\tx715 Activating a layout\plain\fs20 {\v Activatingalayout>proc}\uldb 
\par \pard\sa55\sl275\tx355\tx715 Deleting a layout\plain\fs20 {\v Deletingalayout>proc}\uldb 
\par \pard\sa55\sl275\tx355\tx715 Undeleting a layout\plain\fs20 {\v Undeletingalayout>proc}\uldb 
\par \pard\sa55\sl275\tx355\tx715 Restoring default settings\plain\fs20 {\v Restoringdefaultsettings>proc}\uldb 
\par \page
{\up $}{\footnote\pard\plain{\up $} Adding a layout}
{\up #}{\footnote\pard\plain{\up #} Addingalayout}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Adding a layout:}
\plain\b\fs24 Adding a layout
\par \pard\sb95\sl275 \plain\fs20 Type layout name into entry field (top left) and click \i Add\plain\fs20  button. New layout will be created and activated. Everything you now do to GpProfile will be stored under this layout name. Layouts are saved automatically.
\par \page
{\up $}{\footnote\pard\plain{\up $} Renaming a layout}
{\up #}{\footnote\pard\plain{\up #} Renamingalayout}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Renaming a layout:}
\b\fs24 Renaming a layout
\par \pard\sb95\sl275 \plain\fs20 Select layout in the layout list (bottom left) with single click or arrow keys, then type new name in the entry field and click \i Rename\plain\fs20  button.
\par \page
{\up $}{\footnote\pard\plain{\up $} Activating a layout}
{\up #}{\footnote\pard\plain{\up #} Activatingalayout}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Activating a layout:}
\b\fs24 Activating a layout
\par \pard\sb95\sl275 \plain\fs20 Select layout in the layout list, and then click the \i Activate\plain\fs20  button. Layout settings will be restored.
\par Alternatively, you can double click on the layout name. This will activate the layout and close Layout Manager.
\par You can activate a layout without opening the Layout Manager. Just click the little arrow beside the Layout Manager button and select layout from the list.
\par \{bmc bm21.BMP\}
\par \page
{\up $}{\footnote\pard\plain{\up $} Deleting a layout}
{\up #}{\footnote\pard\plain{\up #} Deletingalayout}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Deleting a layout:}
\b\fs24 Deleting a layout
\par \pard\sb95\sl275 \plain\fs20 Select layout in the layout list, then click the \i Delete\plain\fs20  button.
\par \page
{\up $}{\footnote\pard\plain{\up $} Undeleting a layout}
{\up #}{\footnote\pard\plain{\up #} Undeletingalayout}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Undeleting a layout:}
\b\fs24 Undeleting a layout
\par \pard\sb95\sl275 \plain\fs20 Until you close the GpProfile, you can undelete any deleted layout. Select the layout and click the \i Undelete\plain\fs20  button, which will appear instead of \i Delete\plain\fs20  button.
\par \page
{\up $}{\footnote\pard\plain{\up $} Restoring default settings}
{\up #}{\footnote\pard\plain{\up #} Restoringdefaultsettings}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Restoring default settings:}
\b\fs24 Restoring default settings
\par \pard\sb95\sl275 \plain\fs20 If you delete all the layouts and restart GpProfile, it will use default settings (as when it was started for the first time). Use this if you really mixed everything up.
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0003:0006}
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Instrumentation}
{\up #}{\footnote\pard\plain{\up #} Instrumentation3}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} Instrumentation:}
\b\fs32 Instrumentation
\par \pard\sb95\sl275 \plain\ul\fs20 Instrumentation\plain\fs20 {\v 96EE5P} is a process of inserting special code into \ul target\plain\fs20 {\v MH4Q7J}. When instrumenting, you choose procedures that will be measured. After that, you apply the changes, switch to Delphi, recompile the program and run it.
\par \pard\sb175\sa15 \b\fs22\cf1 More:
\par \pard\sa55\sl275 \uldb \plain\uldb\fs20 Elements\plain\fs20 {\v Elements1>main}\uldb 
\par Actions\plain\fs20 {\v Actions1>main}\uldb 
\par Options\plain\fs20 {\v Options1>main}\uldb 
\par API\plain\fs20 {\v API>main}\uldb 
\par Metacomments\plain\fs20 {\v Metacomments>main}\uldb 
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0003:0007}
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Instrumentation - Elements}
{\up #}{\footnote\pard\plain{\up #} Elements1}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} Elements:}
\plain\b\fs32 Elements
\par \pard\sb55\sa55\sl275\tx355\tx715 \plain\fs20 \{bmc bm22.BMP\}
\par \pard\sb95\sl275\tx355\tx715 \{bml bm23.SHG\}
\par \pard\sb175\sa15\tx355\tx715 \b\fs22\cf1 More:
\par \pard\sa55\sl275\tx355\tx715 \uldb \plain\uldb\fs20 Units\plain\fs20 {\v Units1>proc}\uldb 
\par \pard\sa55\sl275\tx355\tx715 Classes\plain\fs20 {\v Classes1>proc}\uldb 
\par \pard\sa55\sl275\tx355\tx715 Procedures\plain\fs20 {\v Procedures1>proc}\uldb 
\par \pard\sa55\sl275\tx355\tx715 Source preview\plain\fs20 {\v SourceprevieW1>proc}\uldb 
\par \pard\sa55\sl275\tx355\tx715 Show all folders\plain\fs20 {\v Showallfolders>proc}\uldb 
\par \page
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Elements - Units}
{\up #}{\footnote\pard\plain{\up #} Units1}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Units:}
\plain\b\fs24 Units
\par \pard\sb95\sl275 \plain\i\fs20 Units\plain\fs20  window shows all program units or all units in project folder, depend on the state of \uldb Show all folders\plain\fs20 {\v Showallfolders>proc} flag. 
\par Click on a unit name to select it and display its classes in \uldb Classes\plain\fs20 {\v Classes1>proc} window. Click a checkbox next to the unit name to mark/unmark all procedures in the selected unit for \ul instrumentation\plain\fs20 {\v 96EE5P}. 
\par Click checkbox next to the \i <all units>\plain\fs20  item to mark/unmark all units in program (or in project folder).
\par \page
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Elements - Classes}
{\up #}{\footnote\pard\plain{\up #} Classes1}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Classes:}
\b\fs24 Classes
\par \pard\sb95\sl275 \plain\i\fs20 Classes\plain\fs20  window shows all classes from the selected unit, listed alphabetically. 
\par Click on a class name to select it and display its method in \uldb Procedures\plain\fs20 {\v Procedures1>proc} window. Click a checkbox next to the class name to mark/unmark all methods in the selected class for \ul instrumentation\plain\fs20 {\v 96EE5P}.
\par Click checkbox next to the \i <all classes>\plain\fs20  item to mark/unmark all procedures in selected unit.
\par All procedures that are not part of any class are collected under the \i <classless procedures>\plain\fs20  item.
\par \page
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Elements - Procedures}
{\up #}{\footnote\pard\plain{\up #} Procedures1}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Procedures:}
\b\fs24 Procedures
\par \pard\sb95\sl275 \plain\i\fs20 Procedures\plain\fs20  window shows all methods in the selected class, all procedures, which are not part of any class, or all procedures from the selected unit.
\par Click on a procedure name to select it and display its source in the \uldb Source preview\plain\fs20 {\v SourceprevieW1>proc} window. Click a checkbox next to the procedure name to mark/unmark it.
\par Click checkbox next to the \i <all procedures>\plain\fs20 /\i <all classles procedures>\plain\fs20 /\i <all TXXX methods> \plain\fs20  item to mark/unmark all procedures, all procedures that are not part of any class, or all procedures in class TXXX.
\par \page
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Elements - Source preview}
{\up #}{\footnote\pard\plain{\up #} SourceprevieW1}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Source preview:}
\b\fs24 Source preview
\par \pard\sb95\sl275 \plain\i\fs20 Source preview\plain\fs20  window shows selected unit, positioned at the beginning of selected procedure.
\par \page
{\up $}{\footnote\pard\plain{\up $} Show all folders}
{\up #}{\footnote\pard\plain{\up #} Showallfolders}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Show all folders:}
\b\fs24 Show all folders
\par \pard\sb95\sl275 \plain\fs20 Toggles the \uldb units\plain\fs20 {\v Units1>proc} window display. In unchecked state \i units\plain\fs20  window displays only the units that are positioned in the project directory. In checked state \i units\plain\fs20  window displays all units referenced in project (minus units excluded in \uldb Options\plain\fs20 {\v Options1>main}).
\par You can set the \i Show all folders\plain\fs20  default state in \uldb Preferences\plain\fs20 {\v Preferences>main}.
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0003:0008}
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Instrumentation - Actions}
{\up #}{\footnote\pard\plain{\up #} Actions1}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} Actions:}
\b\fs32 Actions
\par \pard\sb95\sl275 \plain\ul\fs20 Instrumentation\plain\fs20 {\v 96EE5P} actions are divided into three groups: opening the project, instrumenting the project, and setting the project options. You can access them through the Project menu or through the Project toolbar.
\par \{bml bm24.SHG\}
\par \{bml bm25.SHG\}
\par \pard\sb175\sa15 \b\fs22\cf1 More:
\par \pard\sa55\sl275 \uldb \plain\uldb\fs20 Open\plain\fs20 {\v Open1>proc}\uldb 
\par Reopen\plain\fs20 {\v Reopen1>proc}\uldb 
\par Rescan\plain\fs20 {\v Rescan1>proc}\uldb 
\par Instrument and Run\plain\fs20 {\v InstrumentandRun>proc}\uldb 
\par Instrument\plain\fs20 {\v Instrument>proc}\uldb 
\par Remove Instrumentation\plain\fs20 {\v RemoveInstrumentation>proc}\uldb 
\par Run Delphi\plain\fs20 {\v RunDelphi>proc}\uldb 
\par \page
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Actions - Open}
{\up #}{\footnote\pard\plain{\up #} Open1}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Open:}
\plain\b\fs24 Open
\par \pard\sb95\sl275 \plain\fs20 Displays File Open dialog with which you can select the project (.dpr file) to instrument.
\par \page
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Actions - Reopen}
{\up #}{\footnote\pard\plain{\up #} Reopen1}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Reopen:}
\b\fs24 Reopen
\par \pard\sb55\sa55\sl275\tx355\tx715 \plain\fs20 Shows the list of recently opened project. Select a project to reopen it.
\par \page
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Actions - Rescan}
{\up #}{\footnote\pard\plain{\up #} Rescan1}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Rescan:}
\b\fs24 Rescan
\par \pard\sb95\sl275 \plain\fs20 Rescans the current project. As GpProfile checks files every time it becomes active this will rarely be necessary.
\par \page
{\up $}{\footnote\pard\plain{\up $} Instrument and Run}
{\up #}{\footnote\pard\plain{\up #} InstrumentandRun}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Instrument and Run:}
\b\fs24 Instrument and Run
\par \pard\sb95\sl275 \uldb \plain\uldb\fs20 Instruments\plain\fs20 {\v Instrument>proc} all selected procedures and \uldb starts\plain\fs20 {\v RunDelphi>proc} the Delphi IDE.
\par \page
{\up $}{\footnote\pard\plain{\up $} Instrument}
{\up #}{\footnote\pard\plain{\up #} Instrument}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Instrument:}
\b\fs24 Instrument
\par \pard\sb95\sl275 \plain\fs20 Instruments all selected procedures and removes \ul instrumentation\plain\fs20 {\v 96EE5P} from all unselected procedures. 
\par \page
{\up $}{\footnote\pard\plain{\up $} Remove Instrumentation}
{\up #}{\footnote\pard\plain{\up #} RemoveInstrumentation}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Remove Instrumentation:}
\b\fs24 Remove Instrumentation
\par \pard\sb95\sl275 \plain\fs20 Removes \ul instrumentation\plain\fs20 {\v 96EE5P} from all procedures in project. Useful for cleaning up after \ul profiling\plain\fs20 {\v 3T5._U4} session.
\par \page
{\up $}{\footnote\pard\plain{\up $} Run Delphi}
{\up #}{\footnote\pard\plain{\up #} RunDelphi}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Run Delphi:}
\b\fs24 Run Delphi
\par \pard\sb95\sl275 \plain\fs20 Runs Delphi environment. If you have more than one Delphi installed, select the proper version in \uldb Options\plain\fs20 {\v Options1>main}, or with an arrow button right to the \i Run Delphi\plain\fs20  toolbar button.
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0003:0009}
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Instrumentation - Options}
{\up #}{\footnote\pard\plain{\up #} Options1}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} Options:}
\b\fs32 Options
\par \pard\sb95\sl275 \plain\fs20 Use \i Options\plain\fs20  dialog to set local options for the current project. These options override options, set in \uldb Preferences\plain\fs20 {\v Preferences>main} dialog. \i Options\plain\fs20  dialog has two pages - Instrumentation, and Excluded units.
\par \pard\sb175\sa15 \b\fs22\cf1 More:
\par \pard\sa55\sl275 \uldb \plain\uldb\fs20 Instrumentation\plain\fs20 {\v Instrumentation4>proc}\uldb 
\par Excluded units\plain\fs20 {\v Excludedunits2>proc}\uldb 
\par Conditional defines\plain\fs20 {\v Conditionaldefines2>proc}\uldb 
\par \page
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Options - Instrumentation}
{\up #}{\footnote\pard\plain{\up #} Instrumentation4}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Instrumentation:}
\plain\b\fs24 Instrumentation
\par \pard\sb95\sl275 \plain\fs20 On \ul Instrumentation\plain\fs20 {\v 96EE5P} page, you set defaults for various items relevant to the instrumentation process
\par \pard\sb55\sa55\sl275\tx355\tx715 \{bmc bm26.BMP\}
\par \pard\sb95\sl275\tx355\tx715 \b Marker style\plain\fs20 
\par \pard\sb95\sl275\tx355\tx715 GpProfile uses markers to mark instrumented code in the program so it can be safely uninstrumented later. Default marker style is \i \{\->>GpProfile\'7d\plain\fs20 , which you can change to \i \{\-$IFDEF GpProfile\'7d\plain\fs20 . If you use the second option don't forget to manually $DEFINE GpProfile in all units you want to \ul profile\plain\fs20 {\v S2BL_O}.
\par \pard\sb95\sl275\tx355\tx715 \b Compiler version\plain\fs20 
\par \pard\sb95\sl275\tx355\tx715 Here you can select Delphi environment if you have more than one Delphi installed.
\par \pard\sb95\sl275\tx355\tx715 \b Speed/Size\plain\fs20 
\par \pard\sb95\sl275\tx355\tx715 Profile files get pretty big (you'll reach gigabyte sizes without a problem) and sometimes you'll want to keep them smaller at the expense of \ul target\plain\fs20 {\v MH4Q7J} program speed. Beside uncompressed data, GpProfile supports two levels of compression.
\par \pard\sb95\sl275\tx355\tx715 \b Show all folders\plain\fs20 
\par \pard\sb95\sl275\tx355\tx715 Check if you want to see all used units, not only units in the project folder.
\par \pard\sb95\sl275\tx355\tx715 \b Start \plain\ul\fs20 profiling\plain\fs20 {\v 3T5._U4}\b  on target startup\plain\fs20 
\par \pard\sb95\sl275\tx355\tx715 When you want to measure just some part of the program, you must disable profiling autostart with this option and start/stop profiling manually by using \uldb API\plain\fs20 {\v API>main} calls.
\par \pard\sb95\sl275\tx355\tx715 \b Defaults\plain\fs20 
\par \pard\sb95\sl275\tx355\tx715 Resets all settings to default values (as set in \uldb Preferences\plain\fs20 {\v Preferences>main}\i  \plain\fs20 dialog).
\par \page
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Options - Excluded units}
{\up #}{\footnote\pard\plain{\up #} Excludedunits2}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Excluded units:}
\b\fs24 Excluded units
\par \pard\sb95\sl275 \plain\fs20 On \i Excluded units\plain\fs20  page you set units that won't be parsed. Typically, you put here system units, which you don't want to instrument anyway.
\par \pard\sb55\sa55\sl275\tx355\tx715 \{bmc bm27.BMP\}
\par \pard\sb95\sl275\tx355\tx715 \b Units\plain\fs20 
\par \pard\sb95\sl275\tx355\tx715 Simple Memo field with unit names. One per line, alphabetical order is not important. Case insensitive. If you would like to add another unit, just type it in. Likewise, if you would like to remove a unit, just delete it from this field.
\par \pard\sb95\sl275\tx355\tx715 \b Clear\plain\fs20 
\par \pard\sb95\sl275\tx355\tx715 Clear the \i Units\plain\fs20  field. No units will be excluded.
\par \pard\sb95\sl275\tx355\tx715 \b Add from folder\plain\fs20 
\par \pard\sb95\sl275\tx355\tx715 Click this button to display folder selection dialog. All units from the selected folder will be added to the \i Units\plain\fs20  field.
\par \pard\sb95\sl275\tx355\tx715 \b Defaults\plain\fs20 
\par \pard\sa155\sl275\tx355\tx715 Resets all settings to default values (as set in \uldb \i Preferences\plain\i\fs20 {\v Preferences>main} \plain\fs20 dialog)\i .
\par \page
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Options - Conditional defines}
{\up #}{\footnote\pard\plain{\up #} Conditionaldefines2}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Conditional defines:}
\plain\b\fs24 Conditional defines
\par \pard\sb95\sl275 \plain\fs20 On \i Conditional defines\plain\fs20  page you set symbols that should be pre-set for each parsed unit. Typically, you'll want to set \i Compiler defines\plain\fs20  and \i Project defines\plain\fs20 .
\par \pard\sb55\sa55\sl275\tx355\tx715 \{bmc bm28.BMP\}
\par \pard\sb95\sl275\tx355\tx715 \b Symbols
\par \pard\sb95\sl275\tx355\tx715 \plain\fs20 List of pre-set symbols 
\par \pard\sb95\sl275\tx355\tx715 \b Compiler defines\plain\fs20 
\par \pard\sb95\sl275\tx355\tx715 If checked (default), symbols CPU386, WIN32, and VER90/VER100/VER120 will be pre-set.
\par \pard\sb95\sl275\tx355\tx715 \b Console application\plain\fs20 
\par \pard\sb95\sl275\tx355\tx715 If checked (default for applications, which have \i Generate console application\plain\fs20  option set), symbol CONSOLE will be pre-set.
\par \pard\sb95\sl275\tx355\tx715 \b Project defines\plain\fs20 
\par \pard\sb95\sl275\tx355\tx715 If checked (default), project symbols  (specified in Delphi IDE in \b Project.Options\plain\fs20 ) will be pre-set.
\par \pard\sb95\sl275\tx355\tx715 \b Disable user defines\plain\fs20 
\par \pard\sb95\sl275\tx355\tx715 If checked (default unchecked), additional user-defined symbols (added in this dialog) will be disabled.
\par \pard\sb95\sl275\tx355\tx715 \b Add\plain\fs20 
\par \pard\sb95\sl275\tx355\tx715 Adds user-defined symbol, specified in entry field.
\par \pard\sb95\sl275\tx355\tx715 \b Rename\plain\fs20 
\par \pard\sb95\sl275\tx355\tx715 Renames selected symbol to a name, specified in entry field. 
\par \pard\sb95\sl275\tx355\tx715 \b Delete\plain\fs20 
\par \pard\sb95\sl275\tx355\tx715 Deletes selected symbol.
\par \pard\sb95\sl275\tx355\tx715 \b Clear user\plain\fs20 
\par \pard\sb95\sl275\tx355\tx715 Removes all user-defined symbols.
\par \pard\sb95\sl275\tx355\tx715 \b Clear all\plain\fs20 
\par \pard\sb95\sl275\tx355\tx715 Removes all symbols.
\par \pard\sb95\sl275\tx355\tx715 \b Defaults\plain\fs20 
\par \pard\sb95\sl275\tx355\tx715 Resets all settings (except \i Console application\plain\fs20 , which is set according to application type) to default values (as set in \uldb Preferences\plain\fs20 {\v Preferences>main}\i  \plain\fs20 dialog).
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0003:000a}
{\up $}{\footnote\pard\plain{\up $} API}
{\up #}{\footnote\pard\plain{\up #} API}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} API:}
\b\fs32 API
\par \pard\sb95\sl275 \plain\fs20 You can use GpProfile API to start/stop \ul profiling\plain\fs20 {\v 3T5._U4} from the profiled program.
\par \pard\sb175\sa15 \b\fs22\cf1 More:
\par \pard\sa55\sl275 \uldb \plain\uldb\fs20 ProfilerStart\plain\fs20 {\v ProfilerStart>proc}\uldb 
\par ProfilerStartThread\plain\fs20 {\v ProfilerStartThread>proc}\uldb 
\par ProfilerStop\plain\fs20 {\v ProfilerStop>proc}\uldb 
\par ProfilerTerminate\plain\fs20 {\v ProfilerTerminate>proc}\uldb 
\par \page
{\up $}{\footnote\pard\plain{\up $} ProfilerStart}
\pard\keepn\sb35\sa35 {\up #}{\footnote\pard\plain{\up #} ProfilerStart}
{\up K}{\footnote\pard\plain{\up K} ProfilerStart:}
\plain\b\fs24 ProfilerStart
\par \pard\sb95\sl275 \plain\fs20 Activates \ul profiling\plain\fs20 {\v 3T5._U4} process. Can be used more than once (in pair with \uldb ProfilerStop\plain\fs20 {\v ProfilerStop>proc}).
\par \f3 procedure ProfilerStart;
\par \page
{\up $}{\footnote\pard\plain{\up $} ProfilerStartThread}
{\up #}{\footnote\pard\plain{\up #} ProfilerStartThread}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} ProfilerStartThread:}
\f1\b\fs24 ProfilerStartThread
\par \pard\sb95\sl275 \plain\fs20 Activates \ul profiling\plain\fs20 {\v 3T5._U4} process in single-threaded mode, measuring only the thread from which ProfilerStartThread was called. Can be used more than once (in pair with \uldb ProfilerStop\plain\fs20 {\v ProfilerStop>proc}).
\par \f3 procedure ProfilerStartThread;
\par \page
{\up $}{\footnote\pard\plain{\up $} ProfilerStop}
{\up #}{\footnote\pard\plain{\up #} ProfilerStop}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} ProfilerStop:}
\f1\b\fs24 ProfilerStop
\par \pard\sb95\sl275 \plain\fs20 Deactivates \ul profiling\plain\fs20 {\v 3T5._U4} process. Can be used more than once (in pair with \uldb ProfilerStart\plain\fs20 {\v ProfilerStart>proc} or \uldb ProfilerStartThread\plain\fs20 {\v ProfilerStartThread>proc}).
\par \f3 procedure ProfilerStop;
\par \page
{\up $}{\footnote\pard\plain{\up $} ProfilerTerminate}
{\up #}{\footnote\pard\plain{\up #} ProfilerTerminate}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} ProfilerTerminate:}
\f1\b\fs24 ProfilerTerminate
\par \pard\sb95\sl275 \plain\fs20 Terminates \ul profiling\plain\fs20 {\v 3T5._U4} process and opens current \ul profile\plain\fs20 {\v S2BL_O} in GpProfile. \ul Target\plain\fs20 {\v MH4Q7J} continues running. After this call, profiling process cannot be restarted without reruning the target.
\par \f3 procedure ProfilerTerminate;
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0003:000b}
{\up $}{\footnote\pard\plain{\up $} Metacomments}
{\up #}{\footnote\pard\plain{\up #} Metacomments}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} Metacomments:}
\f1\b\fs32 Metacomments
\par \pard\sb95\sl275 \plain\fs20 Metacomments are special comments that will be expanded if at least one procedure in current unit is instrumented.
\par You can use them to conditionally execute commands only when unit is profiled. 
\par Typical example is to start/stop \ul profiling\plain\fs20 {\v 3T5._U4}. Instead of writing
\par \f3 procedure Test;
\par begin 
\par   ProfilerStart;
\par   \{\- some code \'7d
\par   ProfilerStop;
\par end; \{\- Test \'7d
\par \f1 you should write
\par \f3 procedure Test;
\par begin 
\par   \{\-GPP:ProfilerStart;\'7d
\par   \{\- some code \'7d
\par   \{\-GPP:ProfilerStop;\'7d
\par end; \{\- Test \'7d
\par \f1 When at least one procedure from the unit is instrumented, \ul instrumentation\plain\fs20 {\v 96EE5P} process will change this to
\par \pard\sb95\sl275 \f3 procedure Test;
\par begin 
\par   \{\->>GpProfile API\'7dProfilerStart;\{\-GpProfile API>>\'7d
\par   \{\- some code \'7d
\par   \{\->>GpProfile API\'7dProfilerStop;\{\-GpProfile API>>\'7d
\par end; \{\- Test \'7d
\par \f1 When no procedure from the unit are instrumented, instrumentation process will change this to original (commented out) form.
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0003:000c}
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Analysis}
{\up #}{\footnote\pard\plain{\up #} Analysis3}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} Analysis:}
\b\fs32 Analysis
\par \pard\sb95\sl275 \plain\fs20 Analysis is a process of interpreting the \ul profile\plain\fs20 {\v S2BL_O}.
\par \pard\sb175\sa15 \b\fs22\cf1 More:
\par \pard\sa55\sl275 \uldb \plain\uldb\fs20 Elements\plain\fs20 {\v Elements2>main}\uldb 
\par Actions\plain\fs20 {\v Actions2>main}\uldb 
\par Export\plain\fs20 {\v Export>main}\uldb 
\par Options\plain\fs20 {\v Options2>main}\uldb 
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0003:000d}
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Analysis - Elements}
{\up #}{\footnote\pard\plain{\up #} Elements2}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} Elements:}
\plain\b\fs32 Elements
\par \pard\sb55\sa55\sl275\tx355\tx715 \plain\fs20 \{bmc bm29.BMP\}
\par \pard\sb95\sl275\tx355\tx715 \{bml bm30.SHG\}
\par \pard\sb95\sl275\tx355\tx715 \{bml bm31.SHG\}
\par \pard\sb175\sa15\tx355\tx715 \b\fs22\cf1 More:
\par \pard\sa55\sl275\tx355\tx715 \uldb \plain\uldb\fs20 Select thread\plain\fs20 {\v Selectthread>proc}\uldb 
\par \pard\sa55\sl275\tx355\tx715 Procedures\plain\fs20 {\v Procedures2>proc}\uldb 
\par \pard\sa55\sl275\tx355\tx715 Classes\plain\fs20 {\v Classes2>proc}\uldb 
\par \pard\sa55\sl275\tx355\tx715 Units\plain\fs20 {\v Units2>proc}\uldb 
\par \pard\sa55\sl275\tx355\tx715 Threads\plain\fs20 {\v Threads>proc}\uldb 
\par \pard\sa55\sl275\tx355\tx715 Callers view\plain\fs20 {\v Callersview>proc}\uldb 
\par \pard\sa55\sl275\tx355\tx715 Called view\plain\fs20 {\v Calledview>proc}\uldb 
\par \pard\sa55\sl275\tx355\tx715 Browser buttons\plain\fs20 {\v Browserbuttons>proc}\uldb 
\par \pard\sa55\sl275\tx355\tx715 Source preview\plain\fs20 {\v SourceprevieW2>proc}\uldb 
\par \page
{\up $}{\footnote\pard\plain{\up $} Select thread}
{\up #}{\footnote\pard\plain{\up #} Selectthread}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Select thread:}
\plain\b\fs24 Select thread
\par \pard\sb95\sl275 \plain\i\fs20 Select thread\plain\fs20  list allows you to select the thread for which you want to analyse the data. You can also select \i All threads\plain\fs20  and analyse combined data from all threads. If measured program had only one thread, this selector is disabled.
\par \page
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Elements - Procedures}
{\up #}{\footnote\pard\plain{\up #} Procedures2}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Procedures:}
\b\fs24 Procedures
\par \pard\sb95\sl275 \plain\i\fs20 Procedures\plain\fs20  pane shows \ul profiling\plain\fs20 {\v 3T5._U4} data grouped by procedures. You can sort the view by procedure name, % time, time, total time (procedure + all children), number of calls, shortest execution time, longest execution time, and average execution time. You can also resize columns.
\par \page
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Elements - Classes}
{\up #}{\footnote\pard\plain{\up #} Classes2}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Classes:}
\b\fs24 Classes
\par \pard\sb95\sl275 \plain\i\fs20 Classes\plain\fs20  pane shows \ul profiling\plain\fs20 {\v 3T5._U4} data grouped by classes. You can sort the view by class name, % time, time, total time (procedure + all children), and number of calls. You can also resize columns.
\par \page
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Elements - Units}
{\up #}{\footnote\pard\plain{\up #} Units2}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Units:}
\b\fs24 Units
\par \pard\sb95\sl275 \plain\i\fs20 Units\plain\fs20  pane shows \ul profiling\plain\fs20 {\v 3T5._U4} data grouped by units. You can sort the view by unit name, % time, time, total time (procedure + all children), and number of calls. You can also resize columns.
\par \page
{\up $}{\footnote\pard\plain{\up $} Threads}
{\up #}{\footnote\pard\plain{\up #} Threads}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Threads:}
\b\fs24 Threads
\par \pard\sb95\sl275 \plain\i\fs20 Threads\plain\fs20  pane shows \ul profiling\plain\fs20 {\v 3T5._U4} data grouped by threads. You can sort the view by thread name, % time, time, total time (procedure + all children), and number of calls. You can also resize columns.
\par \page
{\up $}{\footnote\pard\plain{\up $} Callers view}
{\up #}{\footnote\pard\plain{\up #} Callersview}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Callers view:}
\b\fs24 Callers view
\par \pard\sb95\sl275 \plain\i\fs20 Callers view\plain\fs20  shows all callers of the selected procedure. Statistical data displayed in the callers view is data for \b selected procedure\plain\fs20 , not for the calling procedure! Take a look at the following example:
\par \pard\sb55\sa55\sl275\tx355\tx715 \{bmc bm32.BMP\}
\par \pard\sb95\sl275\tx355\tx715 Procedure \i aa\plain\fs20  was called 200.000 times during the program execution. Its total execution time was 0.071051 second. It was called from procedure \i a\plain\fs20  and from procedure \i b\plain\fs20 . It was called called 100.000 times from both callers and was executing 0.033477 second when called from \i a\plain\fs20  and 0.037574 second when called from \i b\plain\fs20 .
\par \pard\sb95\sl275\tx355\tx715 \i Callers view\plain\fs20  is hidden by default. Use \uldb Show/Hide Callers\plain\fs20 {\v 9SB1PF>proc} switch to display it.
\par \pard\sb95\sl275\tx355\tx715 Double click on a procedure in \i callers view\plain\fs20  selects that procedure in the \i procedure view\plain\fs20 . You can return to then previous state with \uldb browser buttons\plain\fs20 {\v Browserbuttons>proc}.
\par \page
{\up $}{\footnote\pard\plain{\up $} Called view}
{\up #}{\footnote\pard\plain{\up #} Calledview}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Called view:}
\b\fs24 Called view
\par \pard\sb95\sl275 \plain\i\fs20 Called view\plain\fs20  shows timing data for all procedures, called from the selected procedure. Take a look at the following example:
\par \pard\sb55\sa55\sl275\tx355\tx715 \{bmc bm33.BMP\}
\par \pard\sb95\sl275\tx355\tx715 Total execution time for procedure \i DoTheClick \plain\fs20 (together with all procedures called from it) was 0.068803 second. The execution was split between procedure \i a\plain\fs20  (0.020111 second) and procedure b (0.048692 second).
\par \pard\sb95\sl275\tx355\tx715 \i Called view\plain\fs20  is hidden by default. Use \uldb Show/Hide Called\plain\fs20 {\v 56O7_HJ>proc} switch to display it.
\par \pard\sb95\sl275\tx355\tx715 Double click on a procedure in \i called view\plain\fs20  selects that procedure in the \i procedure view\plain\fs20 . You can return to then previous state with \uldb browser buttons\plain\fs20 {\v Browserbuttons>proc}.
\par \page
{\up $}{\footnote\pard\plain{\up $} Browser buttons}
{\up #}{\footnote\pard\plain{\up #} Browserbuttons}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Browser buttons:}
\b\fs24 Browser buttons
\par \pard\sb95\sl275 \plain\fs20 With \i browser buttons\plain\fs20  you can move to the previous/next selected procedure.
\par \page
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Elements - Source preview}
{\up #}{\footnote\pard\plain{\up #} SourceprevieW2}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Source preview:}
\b\fs24 Source preview
\par \pard\sb95\sl275 \plain\i\fs20 Source preview\plain\fs20  window shows selected unit, positioned at the beginning of selected procedure.
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0003:000e}
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Analysis - Actions}
{\up #}{\footnote\pard\plain{\up #} Actions2}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} Actions:}
\b\fs32 Actions
\par \pard\sb95\sl275 \plain\fs20 Analysis actions are divided into three groups: opening the \ul profile\plain\fs20 {\v S2BL_O}, manipulating the profile, and setting the profile options. You can access them through the Profile menu, through the Profile toolbar, or through the context menu, which appears when you right-click on the analysis results.
\par \{bml bm34.SHG\}
\par \{bml bm35.SHG\}
\par \{bml bm36.SHG\}
\par \pard\sb175\sa15 \b\fs22\cf1 More:
\par \pard\sa55\sl275 \uldb \plain\uldb\fs20 Open\plain\fs20 {\v Open2>proc}\uldb 
\par Reopen\plain\fs20 {\v Reopen2>proc}\uldb 
\par Rescan\plain\fs20 {\v Rescan2>proc}\uldb 
\par Rename/Move\plain\fs20 {\v 2QK8C4P>proc}\uldb 
\par Make a Copy\plain\fs20 {\v MakeaCopy>proc}\uldb 
\par Delete\plain\fs20 {\v Delete>proc}\uldb 
\par \page
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Actions - Open}
{\up #}{\footnote\pard\plain{\up #} Open2}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Open:}
\plain\b\fs24 Open
\par \pard\sb95\sl275 \plain\fs20 Displays File Open dialog with which you can select the \ul profile\plain\fs20 {\v S2BL_O} (.prf file) to analyse. After the profile is opened, it is overwritten with much smaller \i digest\plain\fs20 , which contains all the data in compact form that will be opened much faster in the future.
\par \page
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Actions - Reopen}
{\up #}{\footnote\pard\plain{\up #} Reopen2}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Reopen:}
\b\fs24 Reopen
\par \pard\sb55\sa55\sl275\tx355\tx715 \plain\fs20 Shows the list of recently opened profiles. Select a \ul profile\plain\fs20 {\v S2BL_O} to reopen it.
\par \page
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Actions - Rescan}
{\up #}{\footnote\pard\plain{\up #} Rescan2}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Rescan:}
\b\fs24 Rescan
\par \pard\sb95\sl275 \plain\fs20 Rescans the current \ul profile\plain\fs20 {\v S2BL_O}. As GpProfile rescans profile every time the measured program terminates, this will rarely be necessary.
\par \page
{\up $}{\footnote\pard\plain{\up $} Rename/Move}
{\up #}{\footnote\pard\plain{\up #} 2QK8C4P}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Rename/Move:}
\b\fs24 Rename/Move
\par \pard\sb95\sl275 \plain\fs20 Renames the current \ul profile\plain\fs20 {\v S2BL_O}.
\par \page
{\up $}{\footnote\pard\plain{\up $} Make a Copy}
{\up #}{\footnote\pard\plain{\up #} MakeaCopy}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Make a Copy:}
\b\fs24 Make a Copy
\par \pard\sb95\sl275 \plain\fs20 Makes a copy of current \ul profile\plain\fs20 {\v S2BL_O}.
\par \page
{\up $}{\footnote\pard\plain{\up $} Delete}
{\up #}{\footnote\pard\plain{\up #} Delete}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Delete:}
\b\fs24 Delete
\par \pard\sb95\sl275 \plain\fs20 Deletes a current \ul profile\plain\fs20 {\v S2BL_O}. You can undelete last deleted profile until you open a new profile or close GpProfile.
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0003:000f}
{\up $}{\footnote\pard\plain{\up $} Export}
{\up #}{\footnote\pard\plain{\up #} Export}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} Export:}
\b\fs32 Export
\par \pard\sb95\sl275 \plain\fs20 Displays the Export dialog. Typically, you would want to export \ul profile\plain\fs20 {\v S2BL_O} to create a graph from it or to make a hardcopy.
\par \pard\sb55\sa55\sl275\tx355\tx715 \{bmc bm37.BMP\}
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0003:0010}
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Analysis - Options}
{\up #}{\footnote\pard\plain{\up #} Options2}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} Options:}
\b\fs32 Options
\par \pard\sb95\sl275 \plain\fs20 Use \i Options\plain\fs20  dialog to set local options for the current \ul profile\plain\fs20 {\v S2BL_O}. These options override options, set in \uldb Preferences\plain\fs20 {\v Preferences>main} dialog. \i Options\plain\fs20  dialog has only one page - Analysis. 
\par \pard\sb175\sa15 \b\fs22\cf1 More:
\par \pard\sa55\sl275 \uldb \plain\uldb\fs20 Analysis\plain\fs20 {\v Analysis4>proc}\uldb 
\par \page
{\up $}{\footnote\pard\plain{\up $} Using GpProfile - Options - Analysis}
{\up #}{\footnote\pard\plain{\up #} Analysis4}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb35\sa35 {\up K}{\footnote\pard\plain{\up K} Analysis:}
\plain\b\fs24 Analysis
\par \pard\sb95\sl275 \plain\fs20 On \i Analysis\plain\fs20  page, you set the parameters affecting the \ul Profile\plain\fs20 {\v S2BL_O} analysis process. Currently, there is only one option.
\par \pard\sb55\sa55\sl275\tx355\tx715 \{bmc bm38.BMP\}
\par \pard\sb95\sl275\tx355\tx715 \b Hide procedures that were never executed
\par \pard\sb95\sl275\tx355\tx715 \plain\fs20 If checked (default), GpProfile will hide procedures, which were instrumented but never called, so the profile display will be more readable.
\par \pard\sb95\sl275\tx355\tx715 \b Defaults
\par \pard\sb95\sl275\tx355\tx715 \plain\fs20 Resets all settings to default values (as set in \uldb Preferences\plain\fs20 {\v Preferences>main} dialog).
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0003:0011}
{\up $}{\footnote\pard\plain{\up $} Remote Profiling}
{\up #}{\footnote\pard\plain{\up #} RemoteProfiling}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} Remote Profiling:}
\b\fs32 Remote Profiling
\par \pard\sb95\sl275 \plain\fs20 It is possible to instrument and compile program on one computer and run it on another. Together with <program>.exe you must copy files <program>.gpi and <program.gpd>. Then open copy of <program>.gpi and edit path, specified in TableName setting so it would point to the copied <program>.gpd. Run the program.
\par You can open results on the second computer or copy <program>.prf file to the first computer and open it there. I recommend that you open <program>.prf once on second computer so that GpProfile would make it smaller and then transfer this file to first computer and work on it there so you'll have working source preview.
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0003:0012}
{\up $}{\footnote\pard\plain{\up $} DLL and Package Profiling}
{\up #}{\footnote\pard\plain{\up #} DLLandPackageProfiling}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} DLL and Package Profiling:}
\b\fs32 DLL and Package Profiling
\par \pard\sb95\sl275 \plain\fs20 Well, nothing fancy here. Just open a DLL/package source (.dpr/.dpk), instrument it and compile it. \ul Profiling\plain\fs20 {\v 3T5._U4} will start on DLL/package load and stop on DLL/package unload. If you don't like that behaviour, disable \uldb Start profiling on target startup\plain\fs20 {\v Instrumentation4>proc} setting and use GpProfile \uldb API\plain\fs20 {\v API>main} to start/stop profiling.
\par \page
{\up +}{\footnote\pard\plain{\up +} BROWSE0003:0013}
{\up $}{\footnote\pard\plain{\up $} Shortcut keys}
{\up #}{\footnote\pard\plain{\up #} Shortcutkeys}
{\up >}{\footnote\pard\plain{\up >} proc}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} Shortcut keys:}
\b\fs32 Shortcut keys
\par \trowd\trgaph-5\trleft-6 \cellx1505\cellx6495\pard\intbl\sb55\li65\ri65 \fs20 Keys\cell\pard \pard\intbl\sb55\li65\ri65 Action\cell\intbl\row
\trowd\trgaph-5\trleft-6 \cellx1505\cellx6495\pard\intbl\sb55\li65\ri65 \pard\intbl\sb35\sa35\li65\ri65 \plain\fs18 Ctrl+O\cell\pard \pard\intbl\sb35\sa35\li65\ri65 \uldb Open Project\plain\fs18 {\v Open1>proc}\cell\intbl\row
\trowd\trgaph-5\trleft-6 \cellx1505\cellx6495\pard\intbl\sb35\sa35\li65\ri65 Ctrl+F9\cell\pard \pard\intbl\sb35\sa35\li65\ri65 \uldb Instrument and Run\plain\fs18 {\v InstrumentandRun>proc}\cell\intbl\row
\trowd\trgaph-5\trleft-6 \cellx1505\cellx6495\pard\intbl\sb35\sa35\li65\ri65 Ctrl+I\cell\pard \pard\intbl\sb35\sa35\li65\ri65 \uldb Instrument\plain\fs18 {\v Instrument>proc}\cell\intbl\row
\trowd\trgaph-5\trleft-6 \cellx1505\cellx6495\pard\intbl\sb35\sa35\li65\ri65 Ctrl+F2\cell\pard \pard\intbl\sb35\sa35\li65\ri65 \uldb Remove Instrumentation\plain\fs18 {\v RemoveInstrumentation>proc}\cell\intbl\row
\trowd\trgaph-5\trleft-6 \cellx1505\cellx6495\pard\intbl\sb35\sa35\li65\ri65 F9\cell\pard \pard\intbl\sb35\sa35\li65\ri65 \uldb Run Delphi\plain\fs18 {\v RunDelphi>proc}\cell\intbl\row
\trowd\trgaph-5\trleft-6 \cellx1505\cellx6495\pard\intbl\sb35\sa35\li65\ri65 Ctrl+F11\cell\pard \pard\intbl\sb35\sa35\li65\ri65 \uldb Open Profile\plain\fs18 {\v Open2>proc}\cell\intbl\row
\trowd\trgaph-5\trleft-6 \cellx1505\cellx6495\pard\intbl\sb35\sa35\li65\ri65 F1\cell\pard \pard\intbl\sb35\sa35\li65\ri65 Context sensitive help\cell\intbl\row
\trowd\trgaph-5\trleft-6 \cellx1505\cellx6495\pard\intbl\sb35\sa35\li65\ri65 Alt+X\cell\pard \pard\intbl\sb35\sa35\li65\ri65 Exit\cell\intbl\row
\pard \b\fs32 \page
{\up $}{\footnote\pard\plain{\up $} Full Source Code Included}
{\up #}{\footnote\pard\plain{\up #} FullSourceCodeIncluded}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 {\up K}{\footnote\pard\plain{\up K} Full Source Code Included:}
Full Source Code Included
\par \pard\sb95\sl275 \plain\fs20 GpProfile is completely free, including the source code. It is stored in the file gpp_src.zip, available on GpProfile web site (http://www.eccentrica.org/gabr/gpprofile/gpprofile.htm\uldb \{bmc bm0.BMP\}{\v !EF(`http://www.eccentrica.org/gabr/gpprofile/gpprofile.htm',`',1,`')}\plain\fs20 ).
\par \page
{\up $}{\footnote\pard\plain{\up $} Glossary of Terms}
{\up #}{\footnote\pard\plain{\up #} 1KEOGW4}
{\up >}{\footnote\pard\plain{\up >} main}
\pard\keepn\sb175\sa135 \b\fs48 Glossary of Terms
\par \pard\sb35\sa35\sl275 \plain\ul\fs22 project folder\plain\fs22 {\v MYDB7N}\ul 
\par \ul \ul profiling\plain\fs22 {\v 3T5._U4}\ul 
\par \ul \ul profile\plain\fs22 {\v S2BL_O}\ul 
\par \ul \ul deinstrumentation\plain\fs22 {\v 1G4HZUL}\ul 
\par \ul \ul target\plain\fs22 {\v MH4Q7J}\ul 
\par \ul \ul instrumentation\plain\fs22 {\v 96EE5P}\ul 
\par \ul \ul profiler\plain\fs22 {\v 13KNTH8}\ul 
\par \page
{\up #}{\footnote\pard\plain{\up #} MYDB7N}
\pard \plain\b\fs28 project folder
\par \pard\sb115\sl275 \plain\fs20 Folder that contains DPR file.
\par \page
{\up #}{\footnote\pard\plain{\up #} 3T5._U4}
\pard \b\fs28 profiling
\par \pard\sb115\sl275 \plain\fs20 A process of measuring time spent in various parts of program.
\par \page
{\up #}{\footnote\pard\plain{\up #} S2BL_O}
\pard \b\fs28 profile
\par \pard\sb115\sl275 \plain\fs20 A file with timing data. Result of \ul profiling\plain\fs20 {\v 3T5._U4}.
\par \page
{\up #}{\footnote\pard\plain{\up #} 1G4HZUL}
\pard \b\fs28 deinstrumentation
\par \pard\sb115\sl275 \plain\fs20 Removing inserted code from a \ul target\plain\fs20 {\v MH4Q7J}. Inverse of \ul instrumentation\plain\fs20 {\v 96EE5P}.
\par \page
{\up #}{\footnote\pard\plain{\up #} MH4Q7J}
\pard \b\fs28 target
\par \pard\sb115\sl275 \plain\fs20 A program you are trying to \ul profile\plain\fs20 {\v S2BL_O}.
\par \page
{\up #}{\footnote\pard\plain{\up #} 96EE5P}
\pard \b\fs28 instrumentation
\par \pard\sb115\sl275 \plain\fs20 Inserting code into \ul target\plain\fs20 {\v MH4Q7J}.
\par \page
{\up #}{\footnote\pard\plain{\up #} 13KNTH8}
\pard \b\fs28 profiler
\par \pard\sb95\sl275 \plain\fs20 A tool for \ul profiling\plain\fs20 {\v 3T5._U4}.
\par \page
{\up #}{\footnote\pard\plain{\up #} URREPO}
\pard\sb115\sl275 Inserting code into target.
\par 
\par }