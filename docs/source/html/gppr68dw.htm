<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Improving the measurement</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<OBJECT TYPE="application/x-oleobject" CLASSID="clsid:1e2a7bd0-dab9-11d0-b93a-00c04fc99f9e">
	<PARAM NAME="Keyword" VALUE="Improving the measurement:">
</OBJECT>

<P><A NAME="improvingthemeasurement"></A><B>Improving the measurement</B></P>

<P>The important part of <A HREF="gppr1sz8.htm">profiling</A> is knowledge of what you want to <A HREF="gppr1inj.htm">profile</A>. In this case you have measured how long it takes for threads to sort the data AND show this process to the user graphically. And it is obvious that graphical part of the program is taking much more time than the sorting itself. Exactly how much?</P>

<P>To find this out, look at the Sort methods. A short glance at the code shows that all sorting routines are using method VisualSwap to display a swapping operation. Therefore, you should instrument this method too.</P>

<P><IMG SRC="../images/bm7.gif" ALT="" BORDER=0></P>

<P>You must now again choose <B>Project.Instrument and Run</B>, accept the changes in Delphi, compile and run the program, click <I>Start Sorting</I> and close the program. This time the displayed results are completely different.</P>

<P><IMG SRC="../images/bm8.gif" ALT="" BORDER=0></P>

<P>This more exact picture clearly shows that most of the time is spent in the VisualSwap method. Bubble sort is still the slowest but it is now only two times slower than Selection sort (as opposed to nearly three times shown by previous measurement).</P>

</BODY>
</HTML>
